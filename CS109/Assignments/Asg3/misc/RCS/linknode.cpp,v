head	1.5;
access;
symbols;
locks;
comment	@// @;


1.5
date	2015.04.23.23.37.58;	author -;	state -;
branches;
next	1.4;

1.4
date	2015.04.23.23.25.42;	author -;	state -;
branches;
next	1.3;

1.3
date	2015.04.23.23.25.27;	author -;	state -;
branches;
next	1.2;

1.2
date	2015.04.23.23.24.51;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.04.23.23.22.07;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: linknode.cpp,v 1.4 2015-04-23 16:25:42-07 - - $

#include <iostream>
using namespace std;

struct node;
struct link {
   node* next {};
   node* prev {};
};
struct node: link {
   int value {};
};

int main() {
   node* nn = new node();
   link* ll = nn;
   nn = static_cast<node*> (ll);
   cout << "nn = " << nn << ", sizeof = " << sizeof (node) << endl;
   cout << "ll = " << ll << ", sizeof = " << sizeof (link) << endl;
}

//TEST// linknode >linknode.out 2>&1
//TEST// mkpspdf linknode.ps linknode.cpp* linknode.out

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: linknode.cpp,v 1.3 2015-04-23 16:25:27-07 - - $
d8 2
a9 2
   node* next;
   node* prev;
d12 1
a12 1
   int value;
@


1.3
log
@-
@
text
@d1 4
a4 1
// $Id: linknode.cpp,v 1.2 2015-04-23 16:24:51-07 - - $
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id$
d20 3
a22 1
//TEST// 
@


1.1
log
@-
@
text
@d1 1
a1 1

d13 2
a14 3
   node* nn;
   link* ll;
   ll = nn;
d16 2
d19 2
@
