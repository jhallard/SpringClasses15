head	1.26;
access;
symbols;
locks;
comment	@// @;


1.26
date	2014.04.24.21.18.14;	author -;	state -;
branches;
next	1.25;

1.25
date	2014.04.24.21.16.33;	author -;	state -;
branches;
next	1.24;

1.24
date	2014.04.24.21.16.11;	author -;	state -;
branches;
next	1.23;

1.23
date	2014.04.24.21.15.56;	author -;	state -;
branches;
next	1.22;

1.22
date	2014.04.24.21.15.33;	author -;	state -;
branches;
next	1.21;

1.21
date	2014.04.24.21.14.10;	author -;	state -;
branches;
next	1.20;

1.20
date	2013.08.02.03.04.36;	author -;	state -;
branches;
next	1.19;

1.19
date	2013.08.02.03.03.51;	author -;	state -;
branches;
next	1.18;

1.18
date	2013.08.02.03.02.20;	author -;	state -;
branches;
next	1.17;

1.17
date	2013.08.02.03.01.55;	author -;	state -;
branches;
next	1.16;

1.16
date	2013.08.02.03.00.37;	author -;	state -;
branches;
next	1.15;

1.15
date	2013.08.02.02.57.34;	author -;	state -;
branches;
next	1.14;

1.14
date	2013.08.02.02.57.08;	author -;	state -;
branches;
next	1.13;

1.13
date	2013.08.02.02.55.47;	author -;	state -;
branches;
next	1.12;

1.12
date	2013.08.02.02.55.32;	author -;	state -;
branches;
next	1.11;

1.11
date	2013.08.02.02.54.07;	author -;	state -;
branches;
next	1.10;

1.10
date	2013.08.02.02.52.45;	author -;	state -;
branches;
next	1.9;

1.9
date	2013.08.02.02.48.38;	author -;	state -;
branches;
next	1.8;

1.8
date	2013.08.02.02.48.12;	author -;	state -;
branches;
next	1.7;

1.7
date	2013.08.02.02.43.55;	author -;	state -;
branches;
next	1.6;

1.6
date	2013.08.02.02.43.34;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.08.02.02.41.38;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.08.02.02.41.12;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.08.02.02.40.27;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.08.02.02.39.52;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.08.02.02.39.44;	author -;	state -;
branches;
next	;


desc
@@


1.26
log
@-
@
text
@// $Id: splitline.cpp,v 1.25 2014-04-24 14:16:33-07 - - $

//
// Illustrate splitting of input lines.
//

#include <iostream>
#include <string>
using namespace std;

string trim (const string &str) {
   size_t first = str.find_first_not_of (" \t");
   if (first == string::npos) return "";
   size_t last = str.find_last_not_of (" \t");
   return str.substr (first, last - first + 1);
}

int main() {
   for (;;) {
      string line;
      getline (cin, line);
      if (cin.eof()) break;
      cout << endl << "line  = \"" << line << "\"" << endl;
      line = trim (line);
      if (line.size() == 0 or line[0] == '#') {
         cout << "Comment or blank line." << endl;
         continue;
      }
      size_t pos = line.find_first_of ("=");
      if (pos == string::npos) {
         cout << "key   = \"" << line << "\"" << endl;
         cout << "No value in this line." << endl;
      }else {
         string key = trim (line.substr (0, pos == 0 ? 0 : pos - 1));
         string value = trim (line.substr (pos + 1));
         cout << "key   = \"" << key << "\"" << endl;
         cout << "value = \"" << value << "\"" << endl;
      }
   }
   return 0;
}

/*
//TEST// (echo '    # comment   ';
//TEST//  echo '                  ';
//TEST//  echo '    No equal in this line.           ';
//TEST//  echo '   key key key  =  value value value  ';
//TEST//  echo 'only key here =     ';
//TEST//  echo '  = only value here     ';
//TEST//  echo '   =   '
//TEST// ) | splitline >splitline.out 2>&1
//TEST// mkpspdf splitline.ps splitline.cpp* splitline.out
*/
@


1.25
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.24 2014-04-24 14:16:11-07 - - $
d25 1
a25 1
      if (line.size() == 0 || line[0] == '#') {
@


1.24
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.23 2014-04-24 14:15:56-07 - - $
d32 1
a32 1
         cout << "No equal in this line." << endl;
@


1.23
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.22 2014-04-24 14:15:33-07 - - $
d26 1
a26 1
         cout << "Comment or blank link." << endl;
@


1.22
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.21 2014-04-24 14:14:10-07 - - $
d25 1
a25 1
      if (line.size() == 0 || line[0] == '#') [
@


1.21
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.20 2013-08-01 20:04:36-07 - - $
d25 4
a28 1
      if (line.size() == 0 || line[0] == '#') continue;
@


1.20
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.19 2013-08-01 20:03:51-07 - - $
a8 1

@


1.19
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.18 2013-08-01 20:02:20-07 - - $
d30 1
a30 1
         cout << "value = \"\"" << endl;
@


1.18
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.17 2013-08-01 20:01:55-07 - - $
d29 2
a30 1
         cout << "      No \"=\" in line" << endl;
@


1.17
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.16 2013-08-01 20:00:37-07 - - $
d33 1
a33 1
         cout << "key   = \"" << key << endl;
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.15 2013-08-01 19:57:34-07 - - $
d31 4
a34 6
         string key = line.substr (0, pos == 0 ? 0 : pos - 1);
         string value = line.substr (pos + 1);
         cout << "key   = \"" << key << "\""
              << " trim=> \"" << trim (key) << "\"" << endl;
         cout << "value = \"" << value << "\""
              << " trim=> \"" << trim (value) << "\"" << endl;
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.14 2013-08-01 19:57:08-07 - - $
d31 1
a31 1
         string key = line.substr (0, pos - 1);
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.13 2013-08-01 19:55:47-07 - - $
d34 1
a34 1
              << " => \"" << trim (key) << "\"" << endl;
d36 1
a36 1
              << " => \"" << trim (value) << "\"" << endl;
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.12 2013-08-01 19:55:32-07 - - $
d33 4
a36 4
         cout << "key   = \"" << key << "\"" << endl;
         cout << "      = \"" << trim (key) << "\"" << endl;
         cout << "value = \"" << value << "\"" << endl;
         cout << "      = \"" << trim (value) << "\"" << endl;
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.11 2013-08-01 19:54:07-07 - - $
d24 1
a24 1
      cout endl << "line  = \"" << line << "\"" << endl;
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.10 2013-08-01 19:52:45-07 - - $
d14 1
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.9 2013-08-01 19:48:38-07 - - $
d23 3
a25 1
      cout << "line  = \"" << line << "\"" << endl;
a36 1
      cout << endl;
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.8 2013-08-01 19:48:12-07 - - $
d41 8
a48 7
//TEST// valgrind splitline >splitline.out 2>&1 <<__END__
//TEST// No equal in this line.
//TEST// key key   = value.
//TEST// =  value only here.
//TEST// key only here =
//TEST// =
//TEST// __END__
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.7 2013-08-01 19:43:55-07 - - $
d41 1
a41 1
//TEST// ./splitline >splitline.out 2>&1 <<__END__
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.6 2013-08-01 19:43:34-07 - - $
d12 6
d23 1
a23 1
      cout << "line = \"" << line << "\"" << endl;
d26 1
a26 1
         cout << "No \"=\" in line" << endl;
d30 2
a31 1
         cout << "key = \"" << key << "\"" << endl;
d33 1
d35 1
a35 1
  
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.5 2013-08-01 19:41:38-07 - - $
d32 1
d39 1
a39 1
__END__
d41 1
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.4 2013-08-01 19:41:12-07 - - $
d32 8
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.3 2013-08-01 19:40:27-07 - - $
d24 2
a25 2
         cout << "key = \"" << key << endl;
         cout << "value = \"" << value << endl;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.2 2013-08-01 19:39:52-07 - - $
d19 1
a19 1
      if (pos == npos) {
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: splitline.cpp,v 1.1 2013-08-01 19:39:44-07 - - $
d22 2
a23 2
         String key = line.substr (0, pos - 1);
         String value = line.substr (pos + 1);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d10 2
@
