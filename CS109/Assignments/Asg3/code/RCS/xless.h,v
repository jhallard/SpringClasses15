head	1.3;
access;
symbols;
locks;
comment	@ * @;


1.3
date	2014.04.25.01.02.55;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.07.31.00.09.20;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.07.30.22.46.04;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: xless.h,v 1.2 2013-07-30 17:09:20-07 - - $

#ifndef __XLESS_H__
#define __XLESS_H__

//
// We assume that the type type_t has an operator< function.
//

template <typename Type>
struct xless {
   bool operator() (const Type& left, const Type& right) const {
      return left < right;
   }
};

#endif

@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: xless.h,v 1.1 2013-07-30 15:46:04-07 - - $
d12 1
a12 1
   bool operator() (const Type &left, const Type &right) const {
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: xcompare.h,v 1.1 2013-02-12 14:51:41-08 - - $
d12 3
a14 1
   int operator() (const Type &left, const Type &right) const;
@
