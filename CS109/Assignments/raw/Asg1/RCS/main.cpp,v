head	1.4;
access;
symbols;
locks;
comment	@// @;


1.4
date	2014.06.11.03.08.02;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.06.11.03.00.20;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.06.11.02.54.02;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.06.11.02.49.12;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@// $Id: main.cpp,v 1.3 2014-06-10 20:00:20-07 - - $

#include <algorithm>
#include <cstdlib>
#include <iostream>
#include <memory>
#include <string>
#include <vector>
using namespace std;

#include <libgen.h>

#include "hello.h"

int main (int argc, char** argv) {
   string execname {basename (argv[0])};
   vector<string> args (&argv[1], &argv[argc]);
   cout << execname << endl;
   auto hello_ptr = make_shared<hello>();
   hello_ptr->say (cout);
   hello goodbye {"Goodbye, world!"};
   goodbye.say (cout);
   hello second {*hello_ptr};
   second.say (cout);
   for (const auto& arg: args) cout << "for: " << arg << endl;
   for_each (&argv[0], &argv[argc],
             [=] (const char* arg) {
                cout << "for_each: " << arg << endl;
             });
   return EXIT_SUCCESS;
}

@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.2 2014-06-10 19:54:02-07 - - $
d3 1
d23 7
a29 1
   for (const auto& arg: args) cout << arg << endl;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: main.cpp,v 1.1 2014-06-10 19:49:12-07 - - $
d19 3
a21 1
   hello_ptr.say (cout);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d19 1
a19 1
   hello_ptr.say();
@
