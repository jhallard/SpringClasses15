head	1.7;
access;
symbols;
locks;
comment	@// @;


1.7
date	2014.04.09.01.43.33;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.04.09.01.36.15;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.04.09.01.29.12;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.04.09.01.17.54;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.08.08.21.48.10;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.04.11.03.46.21;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.04.11.03.43.21;	author -;	state -;
branches;
next	;


desc
@@


1.7
log
@-
@
text
@// $Id: scanner.cpp,v 1.6 2014-04-08 18:36:15-07 - - $

#include <iostream>
#include <locale>
using namespace std;

#include "scanner.h"
#include "debug.h"

scanner::scanner() {
   seen_eof = false;
   advance();
}

void scanner::advance() {
   if (not seen_eof) {
      cin.get (lookahead);
      if (cin.eof()) seen_eof = true;
   }
}

token_t scanner::scan() {
   token_t result;
   while (not seen_eof and isspace (lookahead)) advance();
   if (seen_eof) {
      result.symbol = SCANEOF;
   }else if (lookahead == '_' or isdigit (lookahead)) {
      result.symbol = NUMBER;
      do {
         result.lexinfo += lookahead;
         advance();
      }while (not seen_eof and isdigit (lookahead));
   }else {
      result.symbol = OPERATOR;
      result.lexinfo += lookahead;
      advance();
   }
   DEBUGF ('S', result);
   return result;
}

ostream& operator<< (ostream& out, const terminal_symbol& symbol) {
   switch (symbol) {
      case NUMBER  : out << "NUMBER"  ; break;
      case OPERATOR: out << "OPERATOR"; break;
      case SCANEOF : out << "SCANEOF" ; break;
   }
   return out;
}

ostream& operator<< (ostream& out, const token_t& token) {
   out << token.symbol << ": \"" << token.lexinfo << "\"";
   return out;
}

@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: scanner.cpp,v 1.5 2014-04-08 18:29:12-07 - - $
d10 1
a10 1
scanner::scanner () {
d15 1
a15 1
void scanner::advance () {
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: scanner.cpp,v 1.4 2014-04-08 18:17:54-07 - - $
a4 1

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: scanner.cpp,v 1.3 2013-08-08 14:48:10-07 - - $
d9 1
a9 1
#include "trace.h"
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: scanner.cpp,v 1.2 2012-04-10 20:46:21-07 - - $
d25 1
a25 1
   while (not seen_eof && isspace (lookahead)) advance();
d28 1
a28 1
   }else if (lookahead == '_' || isdigit (lookahead)) {
d33 1
a33 1
      }while (not seen_eof && isdigit (lookahead));
d39 1
a39 1
   TRACE ('S', result);
d43 1
a43 1
ostream &operator<< (ostream &out, const terminal_symbol &symbol) {
d52 1
a52 1
ostream &operator<< (ostream &out, const token_t &token) {
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: scanner.cpp,v 1.1 2012-04-10 20:43:21-07 - - $
d17 1
a17 1
   if (! seen_eof) {
d25 1
a25 1
   while (!seen_eof && isspace (lookahead)) advance();
d33 1
a33 1
      }while (!seen_eof && isdigit (lookahead));
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: scanner.cc,v 1.1 2011-01-18 22:17:09-08 - - $
d45 3
a47 4
      #define CASE_SYMBOL(SYMBOL) case SYMBOL: out << #SYMBOL; break;
      CASE_SYMBOL (NUMBER);
      CASE_SYMBOL (OPERATOR);
      CASE_SYMBOL (SCANEOF);
@
