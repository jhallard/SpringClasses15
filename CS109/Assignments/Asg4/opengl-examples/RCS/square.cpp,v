head	1.9;
access;
symbols;
locks;
comment	@// @;


1.9
date	2014.08.12.21.28.29;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.08.12.21.27.45;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.08.12.21.27.20;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.08.01.23.12.11;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.08.01.23.10.08;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.08.01.23.09.57;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.08.01.23.09.43;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.08.01.23.09.34;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.08.01.23.09.01;	author -;	state -;
branches;
next	;


desc
@@


1.9
log
@-
@
text
@// $Id: square.cpp,v 1.8 2014-08-12 14:27:45-07 - - $

// Draw a square.

#include <string>
using namespace std;

#include <GL/freeglut.h>

struct {
   string name;
   int width {256};
   int height {256*3/4};
} window;

const GLubyte RED[] = {0xFF, 0x00, 0x00};

void draw_square (GLfloat xpos, GLfloat ypos,
                  GLfloat width, const GLubyte* color) {
   glBegin (GL_POLYGON);
   glColor3ubv (color);
   glVertex2f (xpos, ypos);
   glVertex2f (xpos + width, ypos);
   glVertex2f (xpos + width, ypos + width);
   glVertex2f (xpos, ypos + width);
   glEnd();
}

void display() {
   glClearColor (0.0, 0.0, 1.0, 1.0);
   glClear (GL_COLOR_BUFFER_BIT);
   draw_square (window.width * 0.25, window.height * 0.25,
                window.height * 0.5, RED);
   glutSwapBuffers();
}

void reshape (int width, int height) {
   window.width = width;
   window.height = height;
   glMatrixMode (GL_PROJECTION);
   glLoadIdentity();
   gluOrtho2D (0, window.width, 0, window.height);
   glMatrixMode (GL_MODELVIEW);
   glViewport (0, 0, window.width, window.height);
   glutPostRedisplay();
}

int main (int argc, char** argv) {
   glutInit (&argc, argv);
   glutInitDisplayMode (GLUT_RGBA | GLUT_DOUBLE);
   glutInitWindowSize (window.width, window.height);
   glutInitWindowPosition (128, 128);
   glutCreateWindow (argv[0]);
   glutDisplayFunc (display);
   glutReshapeFunc (reshape);
   glutMainLoop();
   return 0;
}

@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: square.cpp,v 1.7 2014-08-12 14:27:20-07 - - $
d32 2
a33 3
   constexpr GLfloat third = 1.0 / 3.0;
   draw_square (window.width * third, window.height * third,
                window.height * third, RED);
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: square.cpp,v 1.6 2014-08-01 16:12:11-07 - - $
d19 1
a19 1
                  GLfloat width, GLubyte* color) {
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: square.cpp,v 1.5 2014-08-01 16:10:08-07 - - $
d18 2
a19 1
void draw_square() {
d21 5
a25 6
   glColor3ubv (RED);
   constexpr GLfloat third = 1.0 / 3.0;
   glVertex2f (window.width * 1 * third, window.height * 1 * third);
   glVertex2f (window.width * 2 * third, window.height * 1 * third);
   glVertex2f (window.width * 2 * third, window.height * 2 * third);
   glVertex2f (window.width * 1 * third, window.height * 2 * third);
d32 3
a34 1
   draw_square();
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: square.cpp,v 1.4 2014-08-01 16:09:57-07 - - $
d21 5
a25 4
   glVertex2f (window.width / 3.0, window.height / 3.0);
   glVertex2f (window.width / 3.0 * 2, window.height / 3.0);
   glVertex2f (window.width / 3.0 * 2, window.height / 3.0 * 2);
   glVertex2f (window.width / 3.0 * 2, window.height / 3.0 * 2);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: square.cpp,v 1.3 2014-08-01 16:09:43-07 - - $
d40 1
a40 1
   glOrtho2D (0, window.width, 0, window.height);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: square.cpp,v 1.2 2014-08-01 16:09:34-07 - - $
d5 3
a9 1

@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: square.cpp,v 1.1 2014-08-01 16:09:01-07 - - $
d14 1
a14 1
const uchar RED[] = {0xFF, 0x00, 0x00};
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d38 1
a38 1
   glOrtho2d (0, window.width, 0, window.height);
d47 1
a47 1
   glutInitWindowSize (sindow.width, window.height);
@
