head	1.29;
access;
symbols;
locks;
comment	@// @;


1.29
date	2014.07.22.23.38.07;	author -;	state -;
branches;
next	1.28;

1.28
date	2014.05.08.21.52.57;	author -;	state -;
branches;
next	1.27;

1.27
date	2014.05.08.21.52.42;	author -;	state -;
branches;
next	1.26;

1.26
date	2014.05.08.21.51.00;	author -;	state -;
branches;
next	1.25;

1.25
date	2014.05.08.04.28.31;	author -;	state -;
branches;
next	1.24;

1.24
date	2014.05.08.00.36.39;	author -;	state -;
branches;
next	1.23;

1.23
date	2014.05.08.00.35.54;	author -;	state -;
branches;
next	1.22;

1.22
date	2014.05.08.00.35.23;	author -;	state -;
branches;
next	1.21;

1.21
date	2014.05.08.00.32.15;	author -;	state -;
branches;
next	1.20;

1.20
date	2014.05.08.00.30.34;	author -;	state -;
branches;
next	1.19;

1.19
date	2014.05.08.00.26.57;	author -;	state -;
branches;
next	1.18;

1.18
date	2014.05.08.00.26.23;	author -;	state -;
branches;
next	1.17;

1.17
date	2014.05.08.00.25.00;	author -;	state -;
branches;
next	1.16;

1.16
date	2014.05.08.00.23.35;	author -;	state -;
branches;
next	1.15;

1.15
date	2014.05.08.00.23.01;	author -;	state -;
branches;
next	1.14;

1.14
date	2014.05.08.00.14.17;	author -;	state -;
branches;
next	1.13;

1.13
date	2014.05.08.00.08.39;	author -;	state -;
branches;
next	1.12;

1.12
date	2014.05.08.00.00.59;	author -;	state -;
branches;
next	1.11;

1.11
date	2014.05.08.00.00.23;	author -;	state -;
branches;
next	1.10;

1.10
date	2014.05.07.23.59.48;	author -;	state -;
branches;
next	1.9;

1.9
date	2014.05.07.23.58.57;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.05.07.23.57.52;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.05.07.23.57.06;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.05.07.23.56.51;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.05.07.23.55.13;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.05.07.23.55.01;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.07.23.54.22;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.07.23.54.07;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.07.23.53.17;	author -;	state -;
branches;
next	;


desc
@@


1.29
log
@-
@
text
@// $Id: hello-gl.cpp,v 1.28 2014-05-08 14:52:57-07 - - $

// Display text "Hello World" in a window.

#include <iostream>
#include <string>
using namespace std;

#include <GL/freeglut.h>
#include <libgen.h>

// Characteristics of the window.
struct window {
   string name;
   int width {256};
   int height {192};
} window;

// Called by glutMainLoop to display window contents.
void display() {
   cout << __func__ << "()" << endl;

   // Glut strings use unsigned char instead of signed char.
   string hello {"Hello, World"};

   // Pointer to one of the bitmap fonts.
   void* font = GLUT_BITMAP_TIMES_ROMAN_24;

   // Width and height in pixels of the bitmap string.
   int str_width = glutBitmapLength (font, (GLubyte*) hello.c_str());
   int str_height = glutBitmapHeight (font);

   // Set the background default color and clear the window.
   glClearColor (0.25, 0.25, 0.25, 1.0);
   glClear (GL_COLOR_BUFFER_BIT);

   // Set the color of the letters in the message.
   const GLubyte GREEN[] = {0x00, 0xFF, 0x00};
   glColor3ubv (GREEN);

   // Position (x,y) of the left end and base of the string.
   float xpos = window.width / 2.0 - str_width / 2.0;
   float ypos = window.height / 2.0 - str_height / 4.0;
   glRasterPos2f (xpos, ypos);

   // Draw the bitmap in the window.
   //glutBitmapString (font, hello.c_str());
   for (auto ch: hello) glutBitmapCharacter (font, ch);

   // Swap the passive and active buffers to display the window.
   glutSwapBuffers();
}


void reshape (int width, int height) {
   cout << __func__ << "(" << width << "," << height << ")" << endl;
   window.width = width;
   window.height = height;
   glMatrixMode (GL_PROJECTION);
   glLoadIdentity();
   glOrtho (0, window.width, 0, window.height, -1, +1);
   glMatrixMode (GL_MODELVIEW);
   glViewport (0, 0, window.width, window.height);
   glutPostRedisplay();
}

void close() {
   cout << __func__ << "()" << endl;
}

void entry (int state) {
   cout << __func__ << "(";
   switch (state) {
      case GLUT_LEFT: cout << "GLUT_LEFT"; break;
      case GLUT_ENTERED: cout << "GLUT_ENTERED"; break;
      default: cout << state; break;
   }
   cout << ")" << endl;
}

int main (int argc, char** argv) {
   window.name = basename (argv[0]);
   glutInit (&argc, argv);
   glutInitDisplayMode (GLUT_RGBA | GLUT_DOUBLE);
   glutInitWindowSize (window.width, window.height);
   glutCreateWindow (window.name.c_str());
   glutDisplayFunc (display);
   glutReshapeFunc (reshape);
   glutEntryFunc (entry);
   glutCloseFunc (close);
   glutMainLoop();
   return 0;
}

@


1.28
log
@-
@
text
@d1 3
a3 1
// $Id: hello-gl.cpp,v 1.27 2014-05-08 14:52:42-07 - - $
@


1.27
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.26 2014-05-08 14:51:00-07 - - $
d46 1
a46 1
   for (auto ch: hello) glutBitmapCharacter (ch);
@


1.26
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.25 2014-05-07 21:28:31-07 - - $
a9 2
typedef unsigned char uchar;

d28 1
a28 1
   int str_width = glutBitmapLength (font, hello.c_str());
d36 1
a36 1
   const uchar GREEN[] = {0x00, 0xFF, 0x00};
@


1.25
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.24 2014-05-07 17:36:39-07 - - $
d24 1
a24 1
   const uchar* hello = (uchar*) "Hello, World";
d30 1
a30 1
   int str_width = glutBitmapLength (font, hello);
d47 2
a48 1
   glutBitmapString (font, hello);
@


1.24
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.23 2014-05-07 17:35:54-07 - - $
a93 1
//TEST// mkpspdf hello-gl.ps hello-gl.cpp*
@


1.23
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.22 2014-05-07 17:35:23-07 - - $
d60 1
a60 1
   glOrtho (-window.width, 2*window.width, 0, window.height, -1, +1);
@


1.22
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.21 2014-05-07 17:32:15-07 - - $
d60 1
a60 1
   glOrtho (-window.width, window.width, 0, window.height, -1, +1);
@


1.21
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.20 2014-05-07 17:30:34-07 - - $
d60 1
a60 1
   glOrtho (0, window.width, 0, window.height, -1, +1);
@


1.20
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.19 2014-05-07 17:26:57-07 - - $
d21 1
d29 1
a29 1
   // Width in pixels of the bitmap string.
a30 2

   // Height in pixels of the font.
a50 1
   cout << __func__ << "(): at (" << xpos << "," << ypos << ")" << endl;
@


1.19
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.18 2014-05-07 17:26:23-07 - - $
d68 14
d86 1
a86 1
   //glutInitWindowSize (window.width, window.height);
d90 2
a91 8
   //glutKeyboardFunc (keyboard);
   //glutSpecialFunc (special);
   //glutMouseFunc (mouse);
   //glutMotionFunc (motion);
   //glutPassiveMotionFunc (passivemotion);
   //glutEntryFunc (entry);
   //glutCloseFunc (close);
   //glutTimerFunc (frequency, timer, 1);
@


1.18
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.17 2014-05-07 17:25:00-07 - - $
d62 1
a62 1
   glOrtho (-window.width, 2*window.width, 0, window.height, -1, +1);
@


1.17
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.16 2014-05-07 17:23:35-07 - - $
d62 1
a62 1
   glOrtho (0, window.width, 0, window.height, -1, +1);
@


1.16
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.15 2014-05-07 17:23:01-07 - - $
d70 1
a70 1
   //glutInit (&argc, argv);
d72 1
a72 1
   glutInitWindowSize (window.width, window.height);
@


1.15
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.14 2014-05-07 17:14:17-07 - - $
d70 1
a70 1
   glutInit (&argc, argv);
d72 1
a72 1
   //glutInitWindowSize (window.width, window.height);
@


1.14
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.13 2014-05-07 17:08:39-07 - - $
d72 1
a72 1
   glutInitWindowSize (window.width, window.height);
@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.12 2014-05-07 17:00:59-07 - - $
d55 1
d88 1
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.11 2014-05-07 17:00:23-07 - - $
d12 1
d19 1
d21 2
d24 2
d27 2
a28 1
   const uchar GREEN[] = {0x00, 0xFF, 0x00};
d30 2
d33 10
a44 2
   glClear (GL_COLOR_BUFFER_BIT);
   glColor3ubv (GREEN);
d46 2
d49 2
d61 1
a61 2
   gluOrtho2D (0, window.width, 0, window.height);
   glClearColor (0.25, 0.25, 0.25, 1.0);
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.10 2014-05-07 16:59:48-07 - - $
d26 1
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.9 2014-05-07 16:58:57-07 - - $
d14 2
a15 2
   int width;
   int height;
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.8 2014-05-07 16:57:52-07 - - $
d29 1
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.7 2014-05-07 16:57:06-07 - - $
d24 2
a25 2
   float xpos = window::width / 2.0 - str_width / 2.0;
   float ypos = window::height / 2.0 - str_height / 4.0;
d34 2
a35 2
   window::width = width;
   window::height = height;
d38 1
a38 1
   gluOrtho2D (0, window::width, 0, window::height);
d41 1
a41 1
   glViewport (0, 0, window::width, window::height);
d46 1
a46 1
   window::name = basename (argv[0]);
d49 2
a50 2
   glutInitWindowSize (window::width, window::height);
   glutCreateWindow (window::name.c_str());
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.6 2014-05-07 16:56:51-07 - - $
d13 4
a16 4
   static string name;
   static int width;
   static int height;
};
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.5 2014-05-07 16:55:13-07 - - $
d50 1
a50 1
   glutCreateWindow (program_name.c_str());
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.4 2014-05-07 16:55:01-07 - - $
d4 1
d13 1
d38 1
a38 1
   glOrtho2D (0, window::width, 0, window::height);
d46 1
a46 1
   program_name = basename (argv[0]);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.3 2014-05-07 16:54:22-07 - - $
d36 1
a36 1
   glOrtho (0, window::width, 0, window::height);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.2 2014-05-07 16:54:07-07 - - $
d18 1
a18 1
   const void* font = GLUT_BITMAP_TIMES_ROMAN_24;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: hello-gl.cpp,v 1.1 2014-05-07 16:53:17-07 - - $
d11 1
a11 1
class window {
@


1.1
log
@-
@
text
@d1 7
a7 1
// $Id$
@
