head	1.6;
access;
symbols;
locks;
comment	@// @;


1.6
date	2014.05.21.22.44.26;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.05.09.01.32.56;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.05.09.01.07.04;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.08.23.35.08;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.08.23.29.02;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.08.23.22.43;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: rgbcolor.cpp,v 1.5 2014-05-08 18:32:56-07 - - $

#include <cctype>
#include <iomanip>
#include <iostream>
#include <sstream>
#include <stdexcept>
#include <unordered_map>
#include <vector>
using namespace std;

#include "rgbcolor.h"

#include "colors.cppgen"

rgbcolor::rgbcolor (const string& name) {
   auto entry = color_names.find (name);
   if (entry != color_names.end()) {
      *this = entry->second;
   }else {
      invalid_argument error ("rgbcolor::rgbcolor(" + name + ")");
      if (name.size() != 8) throw error;
      string prefix = name.substr (0, 2);
      if (not (prefix == "0x" or prefix == "0X")) throw error;
      for (size_t index = 0; index < 3; ++index) {
         string hex = name.substr (index * 2 + 2, 2);
         for (char digit: hex) if (not isxdigit(digit)) throw error;
         ubvec[index] = stoul (hex, nullptr, 16);
      }
   }
}

rgbcolor::operator string() const {
   ostringstream result;
   result << "0x"
          << hex << setiosflags (ios::uppercase) << setfill ('0')
          << setw(2) << static_cast<unsigned> (red)
          << setw(2) << static_cast<unsigned> (green)
          << setw(2) << static_cast<unsigned> (blue);
   return result.str();
}

ostream& operator<< (ostream& out, const rgbcolor& color) {
   out << string (color);
   return out;
}

@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: rgbcolor.cpp,v 1.4 2014-05-08 18:07:04-07 - - $
d17 2
a18 2
   auto entry = colors.find (name);
   if (entry != colors.end()) {
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: rgbcolor.cpp,v 1.3 2014-05-08 16:35:08-07 - - $
a47 16
#ifdef RGBCOLOR_MAIN
int main(int argc, char **argv) {
   vector<string> args (&argv[1], &argv[argc]);
   for (const auto& s: args) {
      try {
         rgbcolor d (s);
         cout << s << "=" << string(d) << endl;
      }catch (invalid_argument& error) {
         cout << "invalid_argument(" << error.what() << ")" << endl;
      }
   }
   cout << 100 << endl;
   return 0;
}
#endif

@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: rgbcolor.cpp,v 1.2 2014-05-08 16:29:02-07 - - $
d48 1
a48 1
#ifdef __COMMENT_OUT_THIS_FUNCTION__
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: rgbcolor.cpp,v 1.1 2014-05-08 16:22:43-07 - - $
d8 1
a11 1
#include "colortable.cppgen"
d14 2
d17 2
a18 2
   auto entry = color_names.find (name);
   if (entry != color_names.end()) {
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: colornames.cpp,v 1.9 2014-05-07 13:30:34-07 - - $
d11 1
a13 2
#include "colortable.cppgen"

@
