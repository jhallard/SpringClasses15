head	1.9;
access;
symbols;
locks;
comment	@ * @;


1.9
date	2014.05.15.23.42.55;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.05.09.03.47.45;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.05.09.01.32.56;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.05.09.01.23.23;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.05.09.01.07.04;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.05.08.23.47.56;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.08.23.22.43;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.03.01.42.23;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.03.01.39.21;	author -;	state -;
branches;
next	;


desc
@@


1.9
log
@-
@
text
@// $Id: graphics.h,v 1.8 2014-05-08 20:47:45-07 - - $

#ifndef __GRAPHICS_H__
#define __GRAPHICS_H__

#include <memory>
#include <vector>
using namespace std;

#include <GL/freeglut.h>

#include "rgbcolor.h"
#include "shape.h"

class object {
   private:
      shared_ptr<shape> pshape;
      vertex center;
      rgbcolor color;
   public:
      // Default copiers, movers, dtor all OK.
      void draw() { pshape->draw (center, color); }
      void move (GLfloat delta_x, GLfloat delta_y) {
         center.xpos += delta_x;
         center.ypos += delta_y;
      }
};

class mouse {
      friend class window;
   private:
      int xpos {0};
      int ypos {0};
      int entered {GLUT_LEFT};
      int left_state {GLUT_UP};
      int middle_state {GLUT_UP};
      int right_state {GLUT_UP};
   private:
      void set (int x, int y) { xpos = x; ypos = y; }
      void state (int button, int state);
      void draw();
};


class window {
      friend class mouse;
   private:
      static int width;         // in pixels
      static int height;        // in pixels
      static vector<object> objects;
      static size_t selected_obj;
      static mouse mus;
   private:
      static void close();
      static void entry (int mouse_entered);
      static void display();
      static void reshape (int width, int height);
      static void keyboard (GLubyte key, int, int);
      static void special (int key, int, int);
      static void motion (int x, int y);
      static void passivemotion (int x, int y);
      static void mousefn (int button, int state, int x, int y);
   public:
      static void push_back (const object& obj) {
                  objects.push_back (obj); }
      static void setwidth (int width_) { width = width_; }
      static void setheight (int height_) { height = height_; }
      static void main();
};

#endif

@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: graphics.h,v 1.7 2014-05-08 18:32:56-07 - - $
d64 2
a65 1
      void push_back (const object& obj) { objects.push_back (obj); }
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: graphics.h,v 1.6 2014-05-08 18:23:23-07 - - $
d29 2
a30 1
class mouse_state {
d34 1
a34 1
      int entered_ {GLUT_LEFT};
d38 1
a38 1
   public:
a40 2
      void entered (int entered__) { entered_ = entered__; }
      bool entered() { return entered_; };
d46 1
d52 1
a52 1
      static mouse_state mouse;
a67 1
      static pair<int,int> size() { return {width, height}; }
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: graphics.h,v 1.5 2014-05-08 18:07:04-07 - - $
d45 1
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: graphics.h,v 1.4 2014-05-08 16:47:56-07 - - $
d33 1
a33 1
      int entered {GLUT_LEFT};
d40 2
d67 1
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: graphics.h,v 1.3 2014-05-08 16:22:43-07 - - $
d7 1
d29 14
d47 4
a50 1
      static int mouse_entered; // GLUT_LEFT xor GLUT_ENTERED
d53 7
d61 1
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: graphics.h,v 1.2 2014-05-02 18:42:23-07 - - $
d6 22
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: graphics.h,v 1.1 2014-05-02 18:39:21-07 - - $
d6 11
a16 9
#include <GL/freeglut.h>
#include <GL/gl.h>
#include <GL/glu.h>
#include <GL/glut.h>

struct window {
   static int width;         // in pixels
   static int height;        // in pixels
   static int mouse_entered; // GLUT_LEFT xor GLUT_ENTERED
a18 2
void run_glutMainLoop();

@


1.1
log
@-
@
text
@d1 4
a4 1
// $Id$
d19 2
@
