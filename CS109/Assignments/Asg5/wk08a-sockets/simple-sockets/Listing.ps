%!PS-Adobe-3.0
%%BoundingBox: 38 24 574 768
%%Title: Listing.ps
%%For: Wesley Mackey
%%Creator: GNU enscript 1.6.4
%%CreationDate: Fri May 23 19:59:17 2014
%%Orientation: Portrait
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 4
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/MF_PS { % fontname newfontname -> -	make a new font preserving its enc
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/SUF_PS { % fontname width height -> -	set a new user font preserving its enc
  /height exch def
  /width exch def

  /F-gs-user-font MF_PS
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

/bgcs { % x y height blskip red green blue str -> -  show string with bg color
  /str exch def
  /blue exch def
  /green exch def
  /red exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    red green blue setrgbcolor
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 4
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier-Bold /F-gs-font MF
/F-gs-font 11 11 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript-mycolor 1.6 4
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def
/HeaderPageCountF /Helvetica-Bold findfont 18 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    /dhw d_header_w 4 sub def

    /linecolor {0 0 0 setrgbcolor} bind def  % line color
    /txcolor   {0 0 0 setrgbcolor} bind def  % text color
    /fncolor   {0 0 0 setrgbcolor} bind def  % filename line color

    .5 setlinewidth

    % line across bottom of the header area
    linecolor
    0 0 moveto dhw 0 lineto

    % side boxes
    /sbw d_header_h 2 mul def	% side box width

    % left side box
    0 0 sbw d_header_h Box
    linecolor
    stroke

    % date/time in left box
    txcolor
    HeaderDateF setfont
    moddatestr dup stringwidth pop sbw exch sub 2 div
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop sbw exch sub 2 div
    d_header_h 5 div moveto show

    % right side box
    dhw sbw sub 0 sbw d_header_h Box
    linecolor
    stroke

    % get width of pagecount
    HeaderPageCountF setfont
    pagecountstr stringwidth pop

    txcolor
    HeaderPageNumF setfont
    pagenumstr stringwidth pop add  % add to width of pagecount
    sbw exch sub 2 div dhw sbw sub add
    d_header_h .2 mul moveto

    pagenumstr show

    HeaderPageCountF setfont
    pagecountstr show

    % filename
    fncolor
    HeaderHDRF setfont
    dhw fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % HACK around a bug in enscript 1.6.0:
      % for some reason this is getting set to "(null)" and
      %
      user_header_center_str (\(null\)) eq {
        /user_header_center_str () def
      } if

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        dhw user_header_left_str stringwidth pop sub 2 div
        h moveto user_header_left_str show
      } {
        sbw 5 add h moveto user_header_left_str show

        dhw user_header_center_str stringwidth pop sub 2 div
        h moveto user_header_center_str show

	dhw sbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} bind def
%%EndResource
/d_page_w 536 def
/d_page_h 744 def
/d_header_x 0 def
/d_header_y 708 def
/d_header_w 536 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 536 def
/d_footer_h 0 def
/d_output_w 536 def
/d_output_h 708 def
/cols 1 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (sockets.h) def
/fdir () def
/ftail (sockets.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/23/14) def
/pagecountstr (/4) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: sockets.h,v 1.1 2014-05-23 13:25:17-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#ifndef __SOCKET_H__) s
32.4 658 M (4:) s
52.2 658 M
(#define __SOCKET_H__) s
32.4 646 M (5:) s
32.4 634 M (6:) s
52.2 634 M
(#include <cstring>) s
32.4 622 M (7:) s
52.2 622 M
(#include <stdexcept>) s
32.4 610 M (8:) s
52.2 610 M
(#include <string>) s
32.4 598 M (9:) s
52.2 598 M
(#include <vector>) s
25.8 586 M (10:) s
52.2 586 M
(using namespace std;) s
25.8 574 M (11:) s
25.8 562 M (12:) s
52.2 562 M
(#include <arpa/inet.h>) s
25.8 550 M (13:) s
52.2 550 M
(#include <netdb.h>) s
25.8 538 M (14:) s
52.2 538 M
(#include <netinet/in.h>) s
25.8 526 M (15:) s
52.2 526 M
(#include <string>) s
25.8 514 M (16:) s
52.2 514 M
(#include <sys/socket.h>) s
25.8 502 M (17:) s
52.2 502 M
(#include <sys/types.h>) s
25.8 490 M (18:) s
52.2 490 M
(#include <unistd.h>) s
25.8 478 M (19:) s
25.8 466 M (20:) s
52.2 466 M
(//) s
25.8 454 M (21:) s
52.2 454 M
(// class base_socket:) s
25.8 442 M (22:) s
52.2 442 M
(// mostly protected and not used by applications) s
25.8 430 M (23:) s
52.2 430 M
(//) s
25.8 418 M (24:) s
25.8 406 M (25:) s
52.2 406 M
(class base_socket {) s
25.8 394 M (26:) s
52.2 394 M
(   private:) s
25.8 382 M (27:) s
52.2 382 M
(      static constexpr size_t MAXRECV = 0xFFFF;) s
25.8 370 M (28:) s
52.2 370 M
(      static constexpr int CLOSED_FD = -1;) s
25.8 358 M (29:) s
52.2 358 M
(      int socket_fd {CLOSED_FD};) s
25.8 346 M (30:) s
52.2 346 M
(      sockaddr_in socket_addr;) s
25.8 334 M (31:) s
52.2 334 M
(      base_socket \(const base_socket&\) = delete; // prevent copying) s
25.8 322 M (32:) s
52.2 322 M
(      base_socket& operator= \(const base_socket&\) = delete;) s
25.8 310 M (33:) s
52.2 310 M
(   protected:) s
25.8 298 M (34:) s
52.2 298 M
(      base_socket\(\); // only derived classes may construct) s
25.8 286 M (35:) s
52.2 286 M
(      ~base_socket\(\);) s
25.8 274 M (36:) s
52.2 274 M
(      void close\(\);) s
25.8 262 M (37:) s
52.2 262 M
(  ) s
25.8 250 M (38:) s
52.2 250 M
(      // Server initialization) s
25.8 238 M (39:) s
52.2 238 M
(      void create\(\);) s
25.8 226 M (40:) s
52.2 226 M
(      void bind \(const in_port_t port\);) s
25.8 214 M (41:) s
52.2 214 M
(      void listen\(\) const;) s
25.8 202 M (42:) s
52.2 202 M
(      void accept \(base_socket&\) const;) s
25.8 190 M (43:) s
52.2 190 M
(  ) s
25.8 178 M (44:) s
52.2 178 M
(      // Client initialization) s
25.8 166 M (45:) s
52.2 166 M
(      void connect \(const string host, const in_port_t port\);) s
25.8 154 M (46:) s
52.2 154 M
(  ) s
25.8 142 M (47:) s
52.2 142 M
(   public:) s
25.8 130 M (48:) s
52.2 130 M
(      // Data Transimission) s
25.8 118 M (49:) s
52.2 118 M
(      ssize_t send \(const string&\);) s
25.8 106 M (50:) s
52.2 106 M
(      ssize_t recv \(string&\);) s
25.8 94 M (51:) s
52.2 94 M
(      void set_non_blocking \(const bool\);) s
25.8 82 M (52:) s
52.2 82 M
(      friend string to_string \(const base_socket& sock\);) s
25.8 70 M (53:) s
52.2 70 M
(      ) s
25.8 58 M (54:) s
52.2 58 M
(};) s
25.8 46 M (55:) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (sockets.h) def
/fdir () def
/ftail (sockets.h) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (05/23/14) def
/pagecountstr (/4) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (56:) s
25.8 682 M (57:) s
52.2 682 M
(//) s
25.8 670 M (58:) s
52.2 670 M
(// class accepted_socket) s
25.8 658 M (59:) s
52.2 658 M
(// used by server when a client connects) s
25.8 646 M (60:) s
52.2 646 M
(//) s
25.8 634 M (61:) s
25.8 622 M (62:) s
52.2 622 M
(class accepted_socket: public base_socket {) s
25.8 610 M (63:) s
52.2 610 M
(   public:) s
25.8 598 M (64:) s
52.2 598 M
(      accepted_socket\(\) {}) s
25.8 586 M (65:) s
52.2 586 M
(};) s
25.8 574 M (66:) s
25.8 562 M (67:) s
52.2 562 M
(//) s
25.8 550 M (68:) s
52.2 550 M
(// class client_socket) s
25.8 538 M (69:) s
52.2 538 M
(// used by client application to connect to server) s
25.8 526 M (70:) s
52.2 526 M
(//) s
25.8 514 M (71:) s
25.8 502 M (72:) s
52.2 502 M
(class client_socket: public base_socket {) s
25.8 490 M (73:) s
52.2 490 M
(   public: ) s
25.8 478 M (74:) s
52.2 478 M
(      client_socket \(string host, in_port_t port\);) s
25.8 466 M (75:) s
52.2 466 M
(};) s
25.8 454 M (76:) s
25.8 442 M (77:) s
52.2 442 M
(//) s
25.8 430 M (78:) s
52.2 430 M
(// class server_socket) s
25.8 418 M (79:) s
52.2 418 M
(// single use class by server application) s
25.8 406 M (80:) s
52.2 406 M
(//) s
25.8 394 M (81:) s
25.8 382 M (82:) s
52.2 382 M
(class server_socket: public base_socket {) s
25.8 370 M (83:) s
52.2 370 M
(   public:) s
25.8 358 M (84:) s
52.2 358 M
(      server_socket \(in_port_t port\);) s
25.8 346 M (85:) s
52.2 346 M
(      void accept \(accepted_socket& sock\) {) s
25.8 334 M (86:) s
52.2 334 M
(         base_socket::accept \(sock\);) s
25.8 322 M (87:) s
52.2 322 M
(      }) s
25.8 310 M (88:) s
52.2 310 M
(};) s
25.8 298 M (89:) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
38 24 translate
/pagenum 3 def
/fname (sockets.h) def
/fdir () def
/ftail (sockets.h) def
% User defined strings:
/pagenumstr (3) def
/moddatestr (05/23/14) def
/pagecountstr (/4) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (90:) s
25.8 682 M (91:) s
52.2 682 M
(//) s
25.8 670 M (92:) s
52.2 670 M
(// class socket_error) s
25.8 658 M (93:) s
52.2 658 M
(// base class for throwing socket errors) s
25.8 646 M (94:) s
52.2 646 M
(//) s
25.8 634 M (95:) s
25.8 622 M (96:) s
52.2 622 M
(class socket_error: public runtime_error {) s
25.8 610 M (97:) s
52.2 610 M
(   public:) s
25.8 598 M (98:) s
52.2 598 M
(      explicit socket_error \(const string& what\): runtime_error\(what\){}) s
25.8 586 M (99:) s
52.2 586 M
(};) s
19.2 574 M (100:) s
19.2 562 M (101:) s
52.2 562 M
(//) s
19.2 550 M (102:) s
52.2 550 M
(// class socket_sys_error) s
19.2 538 M (103:) s
52.2 538 M
(// subclass to record status of extern int errno variable) s
19.2 526 M (104:) s
52.2 526 M
(//) s
19.2 514 M (105:) s
19.2 502 M (106:) s
52.2 502 M
(class socket_sys_error: public socket_error {) s
19.2 490 M (107:) s
52.2 490 M
(   public:) s
19.2 478 M (108:) s
52.2 478 M
(      int sys_errno;) s
19.2 466 M (109:) s
52.2 466 M
(      explicit socket_sys_error \(const string& what\):) s
19.2 454 M (110:) s
52.2 454 M
(               socket_error\(what + ": " + strerror \(errno\)\),) s
19.2 442 M (111:) s
52.2 442 M
(               sys_errno\(errno\) {}) s
19.2 430 M (112:) s
52.2 430 M
(};) s
19.2 418 M (113:) s
19.2 406 M (114:) s
52.2 406 M
(//) s
19.2 394 M (115:) s
52.2 394 M
(// class socket_h_error) s
19.2 382 M (116:) s
52.2 382 M
(// subclass to record status of extern int h_errno variable) s
19.2 370 M (117:) s
52.2 370 M
(//) s
19.2 358 M (118:) s
19.2 346 M (119:) s
52.2 346 M
(class socket_h_error: public socket_error {) s
19.2 334 M (120:) s
52.2 334 M
(   public:) s
19.2 322 M (121:) s
52.2 322 M
(      int host_errno;) s
19.2 310 M (122:) s
52.2 310 M
(      explicit socket_h_error \(const string& what\):) s
19.2 298 M (123:) s
52.2 298 M
(               socket_error\(what + ": " + hstrerror \(h_errno\)\),) s
19.2 286 M (124:) s
52.2 286 M
(               host_errno\(h_errno\) {}) s
19.2 274 M (125:) s
52.2 274 M
(};) s
19.2 262 M (126:) s
_R
S
%%Page: (4) 4
%%BeginPageSetup
_S
38 24 translate
/pagenum 4 def
/fname (sockets.h) def
/fdir () def
/ftail (sockets.h) def
% User defined strings:
/pagenumstr (4) def
/moddatestr (05/23/14) def
/pagecountstr (/4) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (127:) s
19.2 682 M (128:) s
52.2 682 M
(//) s
19.2 670 M (129:) s
52.2 670 M
(// class hostinfo) s
19.2 658 M (130:) s
52.2 658 M
(// information about a host given hostname or IPv4 address) s
19.2 646 M (131:) s
52.2 646 M
(//) s
19.2 634 M (132:) s
19.2 622 M (133:) s
52.2 622 M
(class hostinfo {) s
19.2 610 M (134:) s
52.2 610 M
(   public:) s
19.2 598 M (135:) s
52.2 598 M
(      const string hostname;) s
19.2 586 M (136:) s
52.2 586 M
(      const vector<string> aliases;) s
19.2 574 M (137:) s
52.2 574 M
(      const vector<in_addr> addresses;) s
19.2 562 M (138:) s
52.2 562 M
(      hostinfo \(\); // localhost) s
19.2 550 M (139:) s
52.2 550 M
(      hostinfo \(hostent*\);) s
19.2 538 M (140:) s
52.2 538 M
(      hostinfo \(const string& hostname\);) s
19.2 526 M (141:) s
52.2 526 M
(      hostinfo \(const in_addr& ipv4_addr\);) s
19.2 514 M (142:) s
52.2 514 M
(      friend string to_string \(const hostinfo&\);) s
19.2 502 M (143:) s
52.2 502 M
(};) s
19.2 490 M (144:) s
19.2 478 M (145:) s
52.2 478 M
(string localhost\(\);) s
19.2 466 M (146:) s
52.2 466 M
(string to_string \(const in_addr& ipv4_addr\);) s
19.2 454 M (147:) s
19.2 442 M (148:) s
52.2 442 M
(#endif) s
19.2 430 M (149:) s
_R
S
%%Page: (1) 5
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (logstream.h) def
/fdir () def
/ftail (logstream.h) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/23/14) def
/pagecountstr (/1) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: logstream.h,v 1.3 2014-05-23 12:44:08-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(//) s
32.4 658 M (4:) s
52.2 658 M
(// class logstream) s
32.4 646 M (5:) s
52.2 646 M
(// replacement for initial cout so that each call to a logstream) s
32.4 634 M (6:) s
52.2 634 M
(// will prefix the line of output with an identification string) s
32.4 622 M (7:) s
52.2 622 M
(// and a process id.  Template functions must be in header files) s
32.4 610 M (8:) s
52.2 610 M
(// and the others are trivial.) s
32.4 598 M (9:) s
52.2 598 M
(//) s
25.8 586 M (10:) s
25.8 574 M (11:) s
52.2 574 M
(#ifndef __LOGSTREAM_H__) s
25.8 562 M (12:) s
52.2 562 M
(#define __LOGSTREAM_H__) s
25.8 550 M (13:) s
25.8 538 M (14:) s
52.2 538 M
(#include <cassert>) s
25.8 526 M (15:) s
52.2 526 M
(#include <iostream>) s
25.8 514 M (16:) s
52.2 514 M
(#include <string>) s
25.8 502 M (17:) s
52.2 502 M
(#include <vector>) s
25.8 490 M (18:) s
52.2 490 M
(using namespace std;) s
25.8 478 M (19:) s
25.8 466 M (20:) s
52.2 466 M
(#include <sys/types.h>) s
25.8 454 M (21:) s
52.2 454 M
(#include <unistd.h>) s
25.8 442 M (22:) s
25.8 430 M (23:) s
52.2 430 M
(class logstream {) s
25.8 418 M (24:) s
52.2 418 M
(   private:) s
25.8 406 M (25:) s
52.2 406 M
(      ostream& out;) s
25.8 394 M (26:) s
52.2 394 M
(      string execname;) s
25.8 382 M (27:) s
52.2 382 M
(   public:) s
25.8 370 M (28:) s
25.8 358 M (29:) s
52.2 358 M
(      // Constructor may or may not have the execname available.) s
25.8 346 M (30:) s
52.2 346 M
(      logstream \(ostream& out, const string& execname = ""\):) s
25.8 334 M (31:) s
52.2 334 M
(                 out \(out\), execname \(execname\) {) s
25.8 322 M (32:) s
52.2 322 M
(      }) s
25.8 310 M (33:) s
25.8 298 M (34:) s
52.2 298 M
(      // First line of main should set_execname if logstream is global.) s
25.8 286 M (35:) s
52.2 286 M
(      void set_execname \(const string& name\) { execname = name; }) s
25.8 274 M (36:) s
25.8 262 M (37:) s
52.2 262 M
(      // First call should be the logstream, not cout.) s
25.8 250 M (38:) s
52.2 250 M
(      // Then forward result to the standard ostream.) s
25.8 238 M (39:) s
52.2 238 M
(      template <typename T>) s
25.8 226 M (40:) s
52.2 226 M
(      ostream& operator<< \(const T& obj\) {) s
25.8 214 M (41:) s
52.2 214 M
(         assert \(execname.size\(\) > 0\);) s
25.8 202 M (42:) s
52.2 202 M
(         out << execname << "\(" << getpid\(\) << "\): " << obj;) s
25.8 190 M (43:) s
52.2 190 M
(         return out;) s
25.8 178 M (44:) s
52.2 178 M
(      }) s
25.8 166 M (45:) s
25.8 154 M (46:) s
52.2 154 M
(};) s
25.8 142 M (47:) s
25.8 130 M (48:) s
52.2 130 M
(#endif) s
25.8 118 M (49:) s
_R
S
%%Page: (1) 6
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (sockets.cpp) def
/fdir () def
/ftail (sockets.cpp) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/23/14) def
/pagecountstr (/4) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: sockets.cpp,v 1.1 2014-05-23 13:25:17-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#include <cerrno>) s
32.4 658 M (4:) s
52.2 658 M
(#include <cstring>) s
32.4 646 M (5:) s
52.2 646 M
(#include <iostream>) s
32.4 634 M (6:) s
52.2 634 M
(#include <sstream>) s
32.4 622 M (7:) s
52.2 622 M
(#include <string>) s
32.4 610 M (8:) s
52.2 610 M
(using namespace std;) s
32.4 598 M (9:) s
25.8 586 M (10:) s
52.2 586 M
(#include <fcntl.h>) s
25.8 574 M (11:) s
52.2 574 M
(#include <limits.h>) s
25.8 562 M (12:) s
25.8 550 M (13:) s
52.2 550 M
(#include "sockets.h") s
25.8 538 M (14:) s
25.8 526 M (15:) s
52.2 526 M
(base_socket::base_socket\(\) {) s
25.8 514 M (16:) s
52.2 514 M
(   memset \(&socket_addr, 0, sizeof \(socket_addr\)\);) s
25.8 502 M (17:) s
52.2 502 M
(}) s
25.8 490 M (18:) s
25.8 478 M (19:) s
52.2 478 M
(base_socket::~base_socket\(\) {) s
25.8 466 M (20:) s
52.2 466 M
(   if \(socket_fd != CLOSED_FD\) close\(\);) s
25.8 454 M (21:) s
52.2 454 M
(}) s
25.8 442 M (22:) s
25.8 430 M (23:) s
52.2 430 M
(void base_socket::close\(\) {) s
25.8 418 M (24:) s
52.2 418 M
(   int status = ::close \(socket_fd\);) s
25.8 406 M (25:) s
52.2 406 M
(   if \(status < 0\) throw socket_sys_error \("close"\);) s
25.8 394 M (26:) s
52.2 394 M
(   socket_fd = CLOSED_FD;) s
25.8 382 M (27:) s
52.2 382 M
(}) s
25.8 370 M (28:) s
25.8 358 M (29:) s
52.2 358 M
(void base_socket::create\(\) {) s
25.8 346 M (30:) s
52.2 346 M
(   socket_fd = ::socket \(AF_INET, SOCK_STREAM, 0\);) s
25.8 334 M (31:) s
52.2 334 M
(   if \(socket_fd < 0\) throw socket_sys_error \("socket"\);) s
25.8 322 M (32:) s
52.2 322 M
(   int on = 1;) s
25.8 310 M (33:) s
52.2 310 M
(   int status = ::setsockopt \(socket_fd, SOL_SOCKET, SO_REUSEADDR,) s
25.8 298 M (34:) s
52.2 298 M
(                            &on, sizeof on\);) s
25.8 286 M (35:) s
52.2 286 M
(   if \(status < 0\) throw socket_sys_error \("setsockopt"\);) s
25.8 274 M (36:) s
52.2 274 M
(}) s
25.8 262 M (37:) s
25.8 250 M (38:) s
52.2 250 M
(void base_socket::bind \(const in_port_t port\) {) s
25.8 238 M (39:) s
52.2 238 M
(   socket_addr.sin_family = AF_INET;) s
25.8 226 M (40:) s
52.2 226 M
(   socket_addr.sin_addr.s_addr = INADDR_ANY;) s
25.8 214 M (41:) s
52.2 214 M
(   socket_addr.sin_port = htons \(port\);) s
25.8 202 M (42:) s
52.2 202 M
(   int status = ::bind \(socket_fd, \(sockaddr*\) &socket_addr,) s
25.8 190 M (43:) s
52.2 190 M
(                        sizeof socket_addr\);) s
25.8 178 M (44:) s
52.2 178 M
(   if \(status < 0\) throw socket_sys_error \("bind"\);) s
25.8 166 M (45:) s
52.2 166 M
(}) s
25.8 154 M (46:) s
25.8 142 M (47:) s
52.2 142 M
(void base_socket::listen\(\) const {) s
25.8 130 M (48:) s
52.2 130 M
(   int status = ::listen \(socket_fd, SOMAXCONN\);) s
25.8 118 M (49:) s
52.2 118 M
(   if \(status < 0\) throw socket_sys_error \("listen"\);) s
25.8 106 M (50:) s
52.2 106 M
(}) s
25.8 94 M (51:) s
_R
S
%%Page: (2) 7
%%BeginPageSetup
_S
38 24 translate
/pagenum 2 def
/fname (sockets.cpp) def
/fdir () def
/ftail (sockets.cpp) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (05/23/14) def
/pagecountstr (/4) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
25.8 694 M (52:) s
25.8 682 M (53:) s
52.2 682 M
(void base_socket::accept \(base_socket& new_socket\) const {) s
25.8 670 M (54:) s
52.2 670 M
(   int addr_length = sizeof new_socket.socket_addr;) s
25.8 658 M (55:) s
52.2 658 M
(   new_socket.socket_fd = ::accept \(socket_fd,) s
25.8 646 M (56:) s
52.2 646 M
(                            \(sockaddr*\) &new_socket.socket_addr,) s
25.8 634 M (57:) s
52.2 634 M
(                            \(socklen_t*\) &addr_length\);) s
25.8 622 M (58:) s
52.2 622 M
(   if \(new_socket.socket_fd < 0\) throw socket_sys_error \("accept"\);) s
25.8 610 M (59:) s
52.2 610 M
(}) s
25.8 598 M (60:) s
25.8 586 M (61:) s
52.2 586 M
(ssize_t base_socket::send \(const string& message\) {) s
25.8 574 M (62:) s
52.2 574 M
(   int nbytes = ::send \(socket_fd, message.c_str\(\), message.size\(\),) s
25.8 562 M (63:) s
52.2 562 M
(                        MSG_NOSIGNAL\);) s
25.8 550 M (64:) s
52.2 550 M
(   if \(nbytes < 0\) throw socket_sys_error \("send"\);) s
25.8 538 M (65:) s
52.2 538 M
(   return nbytes;) s
25.8 526 M (66:) s
52.2 526 M
(}) s
25.8 514 M (67:) s
25.8 502 M (68:) s
52.2 502 M
(ssize_t base_socket::recv \(string& message\) {) s
25.8 490 M (69:) s
52.2 490 M
(   char buffer [MAXRECV + 1];) s
25.8 478 M (70:) s
52.2 478 M
(   message = "";) s
25.8 466 M (71:) s
52.2 466 M
(   memset \(buffer, 0, MAXRECV + 1\);) s
25.8 454 M (72:) s
52.2 454 M
(   ssize_t nbytes = ::recv \(socket_fd, buffer, MAXRECV, 0\);) s
25.8 442 M (73:) s
52.2 442 M
(   if \(nbytes < 0\) throw socket_sys_error \("recv"\);) s
25.8 430 M (74:) s
52.2 430 M
(   if \(nbytes > 0\) message = buffer;) s
25.8 418 M (75:) s
52.2 418 M
(   return nbytes;) s
25.8 406 M (76:) s
52.2 406 M
(}) s
25.8 394 M (77:) s
25.8 382 M (78:) s
52.2 382 M
(void base_socket::connect \(const string host, const in_port_t port\) {) s
25.8 370 M (79:) s
52.2 370 M
(   struct hostent *hostp = ::gethostbyname \(host.c_str\(\)\);) s
25.8 358 M (80:) s
52.2 358 M
(   if \(hostp == NULL\) throw socket_h_error \("gethostbyname\(") s
25.8 346 M (81:) s
52.2 346 M
(                            + host + "\)"\);) s
25.8 334 M (82:) s
52.2 334 M
(   socket_addr.sin_family = AF_INET;) s
25.8 322 M (83:) s
52.2 322 M
(   socket_addr.sin_port = htons \(port\);) s
25.8 310 M (84:) s
52.2 310 M
(   socket_addr.sin_addr = *\(in_addr*\) hostp->h_addr;) s
25.8 298 M (85:) s
52.2 298 M
(   int status = ::connect \(socket_fd, \(sockaddr*\) &socket_addr,) s
25.8 286 M (86:) s
52.2 286 M
(                           sizeof \(socket_addr\)\);) s
25.8 274 M (87:) s
52.2 274 M
(   if \(status < 0\) throw socket_sys_error \("connect\(" + host + ":") s
25.8 262 M (88:) s
52.2 262 M
(                         + to_string \(port\) + "\)"\);) s
25.8 250 M (89:) s
52.2 250 M
(}) s
25.8 238 M (90:) s
25.8 226 M (91:) s
52.2 226 M
(void base_socket::set_non_blocking \(const bool blocking\) {) s
25.8 214 M (92:) s
52.2 214 M
(   int opts = ::fcntl \(socket_fd, F_GETFL\);) s
25.8 202 M (93:) s
52.2 202 M
(   if \(opts < 0\) throw socket_sys_error \("fcntl"\);) s
25.8 190 M (94:) s
52.2 190 M
(   if \(blocking\) opts |= O_NONBLOCK;) s
25.8 178 M (95:) s
52.2 178 M
(            else opts &= compl O_NONBLOCK;) s
25.8 166 M (96:) s
52.2 166 M
(   opts = ::fcntl \(socket_fd, F_SETFL, opts\);) s
25.8 154 M (97:) s
52.2 154 M
(   if \(opts < 0\) throw socket_sys_error \("fcntl"\);) s
25.8 142 M (98:) s
52.2 142 M
(}) s
25.8 130 M (99:) s
_R
S
%%Page: (3) 8
%%BeginPageSetup
_S
38 24 translate
/pagenum 3 def
/fname (sockets.cpp) def
/fdir () def
/ftail (sockets.cpp) def
% User defined strings:
/pagenumstr (3) def
/moddatestr (05/23/14) def
/pagecountstr (/4) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (100:) s
19.2 682 M (101:) s
52.2 682 M
(client_socket::client_socket \(string host, in_port_t port\) {) s
19.2 670 M (102:) s
52.2 670 M
(   base_socket::create\(\);) s
19.2 658 M (103:) s
52.2 658 M
(   base_socket::connect \(host, port\);) s
19.2 646 M (104:) s
52.2 646 M
(}) s
19.2 634 M (105:) s
19.2 622 M (106:) s
52.2 622 M
(server_socket::server_socket \(in_port_t port\) {) s
19.2 610 M (107:) s
52.2 610 M
(   base_socket::create\(\);) s
19.2 598 M (108:) s
52.2 598 M
(   base_socket::bind \(port\);) s
19.2 586 M (109:) s
52.2 586 M
(   base_socket::listen\(\);) s
19.2 574 M (110:) s
52.2 574 M
(}) s
19.2 562 M (111:) s
19.2 550 M (112:) s
52.2 550 M
(string to_string \(const hostinfo& info\) {) s
19.2 538 M (113:) s
52.2 538 M
(   return info.hostname + " \(" + to_string \(info.addresses[0]\) + "\)";) s
19.2 526 M (114:) s
52.2 526 M
(}) s
19.2 514 M (115:) s
19.2 502 M (116:) s
52.2 502 M
(string to_string \(const in_addr& ipv4_addr\) { ) s
19.2 490 M (117:) s
52.2 490 M
(   char buffer[INET_ADDRSTRLEN];) s
19.2 478 M (118:) s
52.2 478 M
(   const char *result = ::inet_ntop \(AF_INET, &ipv4_addr,) s
19.2 466 M (119:) s
52.2 466 M
(                                     buffer, sizeof buffer\);) s
19.2 454 M (120:) s
52.2 454 M
(   if \(result == NULL\) throw socket_sys_error \("inet_ntop"\);) s
19.2 442 M (121:) s
52.2 442 M
(   return result; ) s
19.2 430 M (122:) s
52.2 430 M
(}) s
19.2 418 M (123:) s
19.2 406 M (124:) s
52.2 406 M
(string to_string \(const base_socket& sock\) {) s
19.2 394 M (125:) s
52.2 394 M
(   hostinfo info \(sock.socket_addr.sin_addr\);) s
19.2 382 M (126:) s
52.2 382 M
(   return info.hostname + " \(" + to_string \(info.addresses[0]\)) s
19.2 370 M (127:) s
52.2 370 M
(          + "\) port " + to_string \(ntohs \(sock.socket_addr.sin_port\)\);) s
19.2 358 M (128:) s
52.2 358 M
(}) s
19.2 346 M (129:) s
_R
S
%%Page: (4) 9
%%BeginPageSetup
_S
38 24 translate
/pagenum 4 def
/fname (sockets.cpp) def
/fdir () def
/ftail (sockets.cpp) def
% User defined strings:
/pagenumstr (4) def
/moddatestr (05/23/14) def
/pagecountstr (/4) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
19.2 694 M (130:) s
19.2 682 M (131:) s
52.2 682 M
(string init_hostname \(hostent* host\) {) s
19.2 670 M (132:) s
52.2 670 M
(   if \(host == nullptr\) throw socket_h_error \("gethostbyname"\);) s
19.2 658 M (133:) s
52.2 658 M
(   return host->h_name;) s
19.2 646 M (134:) s
52.2 646 M
(}) s
19.2 634 M (135:) s
19.2 622 M (136:) s
52.2 622 M
(vector<string> init_aliases \(hostent* host\) {) s
19.2 610 M (137:) s
52.2 610 M
(   if \(host == nullptr\) throw socket_h_error \("gethostbyname"\);) s
19.2 598 M (138:) s
52.2 598 M
(   vector<string> init_aliases;) s
19.2 586 M (139:) s
52.2 586 M
(   for \(char** alias = host->h_aliases; *alias != nullptr; ++alias\) {) s
19.2 574 M (140:) s
52.2 574 M
(      init_aliases.push_back \(*alias\);) s
19.2 562 M (141:) s
52.2 562 M
(   }) s
19.2 550 M (142:) s
52.2 550 M
(   return init_aliases;) s
19.2 538 M (143:) s
52.2 538 M
(}) s
19.2 526 M (144:) s
19.2 514 M (145:) s
52.2 514 M
(vector<in_addr> init_addresses \(hostent* host\) {) s
19.2 502 M (146:) s
52.2 502 M
(   vector<in_addr> init_addresses;) s
19.2 490 M (147:) s
52.2 490 M
(   if \(host == nullptr\) throw socket_h_error \("gethostbyname"\);) s
19.2 478 M (148:) s
52.2 478 M
(   for \(in_addr** addr = \(in_addr**\) host->h_addr_list;) s
19.2 466 M (149:) s
52.2 466 M
(        *addr != nullptr; ++addr\) {) s
19.2 454 M (150:) s
52.2 454 M
(      init_addresses.push_back \(**addr\);) s
19.2 442 M (151:) s
52.2 442 M
(   }) s
19.2 430 M (152:) s
52.2 430 M
(   return init_addresses;) s
19.2 418 M (153:) s
52.2 418 M
(}) s
19.2 406 M (154:) s
19.2 394 M (155:) s
52.2 394 M
(hostinfo::hostinfo \(hostent* host\):) s
19.2 382 M (156:) s
52.2 382 M
(   hostname \(init_hostname \(host\)\),) s
19.2 370 M (157:) s
52.2 370 M
(   aliases \(init_aliases \(host\)\),) s
19.2 358 M (158:) s
52.2 358 M
(   addresses \(init_addresses \(host\)\) {) s
19.2 346 M (159:) s
52.2 346 M
(}) s
19.2 334 M (160:) s
19.2 322 M (161:) s
52.2 322 M
(hostinfo::hostinfo\(\): hostinfo \(localhost\(\)\) {) s
19.2 310 M (162:) s
52.2 310 M
(}) s
19.2 298 M (163:) s
19.2 286 M (164:) s
52.2 286 M
(hostinfo::hostinfo \(const string& hostname\):) s
19.2 274 M (165:) s
52.2 274 M
(          hostinfo \(::gethostbyname \(hostname.c_str\(\)\)\) {) s
19.2 262 M (166:) s
52.2 262 M
(}) s
19.2 250 M (167:) s
19.2 238 M (168:) s
52.2 238 M
(hostinfo::hostinfo \(const in_addr& ipv4_addr\):) s
19.2 226 M (169:) s
52.2 226 M
(          hostinfo \(::gethostbyaddr \(&ipv4_addr, sizeof ipv4_addr,) s
19.2 214 M (170:) s
52.2 214 M
(                                     AF_INET\)\) {) s
19.2 202 M (171:) s
52.2 202 M
(}) s
19.2 190 M (172:) s
19.2 178 M (173:) s
52.2 178 M
(string localhost\(\) {) s
19.2 166 M (174:) s
52.2 166 M
(   char hostname[HOST_NAME_MAX];) s
19.2 154 M (175:) s
52.2 154 M
(   int rc = gethostname \(hostname, sizeof hostname\);) s
19.2 142 M (176:) s
52.2 142 M
(   if \(rc < 0\) throw socket_sys_error \("gethostname"\);) s
19.2 130 M (177:) s
52.2 130 M
(   return hostname;) s
19.2 118 M (178:) s
52.2 118 M
(}) s
19.2 106 M (179:) s
_R
S
%%Page: (1) 10
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (client.cpp) def
/fdir () def
/ftail (client.cpp) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/23/14) def
/pagecountstr (/1) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(// $Id: client.cpp,v 1.6 2014-05-23 13:25:17-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#include <iostream>) s
32.4 658 M (4:) s
52.2 658 M
(#include <sstream>) s
32.4 646 M (5:) s
52.2 646 M
(#include <string>) s
32.4 634 M (6:) s
52.2 634 M
(#include <vector>) s
32.4 622 M (7:) s
52.2 622 M
(using namespace std;) s
32.4 610 M (8:) s
32.4 598 M (9:) s
52.2 598 M
(#include <libgen.h>) s
25.8 586 M (10:) s
52.2 586 M
(#include <sys/types.h>) s
25.8 574 M (11:) s
52.2 574 M
(#include <unistd.h>) s
25.8 562 M (12:) s
25.8 550 M (13:) s
52.2 550 M
(#include "logstream.h") s
25.8 538 M (14:) s
52.2 538 M
(#include "sockets.h") s
25.8 526 M (15:) s
25.8 514 M (16:) s
52.2 514 M
(string progname;) s
25.8 502 M (17:) s
25.8 490 M (18:) s
52.2 490 M
(int main \(int argc, char** argv\) {) s
25.8 478 M (19:) s
52.2 478 M
(   logstream clog \(cout, basename \(argv[0]\)\);) s
25.8 466 M (20:) s
52.2 466 M
(   vector<string> args \(&argv[1], &argv[argc]\);) s
25.8 454 M (21:) s
52.2 454 M
(   string host = args.size\(\) < 1 ? "localhost" : args[0];) s
25.8 442 M (22:) s
52.2 442 M
(   in_port_t port = args.size\(\) < 2 ? 50000 : stoi \(args[1]\);) s
25.8 430 M (23:) s
52.2 430 M
(   clog << to_string \(hostinfo\(\)\) << endl;) s
25.8 418 M (24:) s
52.2 418 M
(   try {) s
25.8 406 M (25:) s
52.2 406 M
(      clog << "connecting to " << host << " port " << port << endl;) s
25.8 394 M (26:) s
52.2 394 M
(      client_socket server \(host, port\);) s
25.8 382 M (27:) s
52.2 382 M
(      clog << "connected to " << to_string \(server\) << endl;) s
25.8 370 M (28:) s
52.2 370 M
(      for \(int count = 0; count < 4; ++count\) {) s
25.8 358 M (29:) s
52.2 358 M
(         string reply;) s
25.8 346 M (30:) s
52.2 346 M
(         try {) s
25.8 334 M (31:) s
52.2 334 M
(            ostringstream message;) s
25.8 322 M (32:) s
52.2 322 M
(            message << "Message " << count << " from client ") s
25.8 310 M (33:) s
52.2 310 M
(                    << getpid\(\);) s
25.8 298 M (34:) s
52.2 298 M
(            clog << "to server: \\"" << message.str\(\) << "\\"" << endl;) s
25.8 286 M (35:) s
52.2 286 M
(            server.send \(message.str\(\)\);) s
25.8 274 M (36:) s
52.2 274 M
(            server.recv \(reply\);) s
25.8 262 M (37:) s
52.2 262 M
(         }catch \(socket_error& error\) {) s
25.8 250 M (38:) s
52.2 250 M
(            clog << error.what\(\) << endl;) s
25.8 238 M (39:) s
52.2 238 M
(         }) s
25.8 226 M (40:) s
52.2 226 M
(         clog << "from server: \\"" << reply << "\\"" << endl;) s
25.8 214 M (41:) s
52.2 214 M
(      }) s
25.8 202 M (42:) s
52.2 202 M
(   }catch \(socket_error& error\) {) s
25.8 190 M (43:) s
52.2 190 M
(      clog << error.what\(\) << endl;) s
25.8 178 M (44:) s
52.2 178 M
(   }) s
25.8 166 M (45:) s
52.2 166 M
(   return 0;) s
25.8 154 M (46:) s
52.2 154 M
(}) s
_R
S
%%Page: (1) 11
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (server.cpp) def
/fdir () def
/ftail (server.cpp) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/23/14) def
/pagecountstr (/1) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(//$Id: server.cpp,v 1.9 2014-05-23 13:25:17-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(#include <iostream>) s
32.4 658 M (4:) s
52.2 658 M
(#include <string>) s
32.4 646 M (5:) s
52.2 646 M
(#include <vector>) s
32.4 634 M (6:) s
52.2 634 M
(using namespace std;) s
32.4 622 M (7:) s
32.4 610 M (8:) s
52.2 610 M
(#include <libgen.h>) s
32.4 598 M (9:) s
25.8 586 M (10:) s
52.2 586 M
(#include "logstream.h") s
25.8 574 M (11:) s
52.2 574 M
(#include "sockets.h") s
25.8 562 M (12:) s
25.8 550 M (13:) s
52.2 550 M
(int main \(int argc, char** argv\) {) s
25.8 538 M (14:) s
52.2 538 M
(   logstream clog \(cout, basename \(argv[0]\)\);) s
25.8 526 M (15:) s
52.2 526 M
(   vector<string> args \(&argv[1], &argv[argc]\);) s
25.8 514 M (16:) s
52.2 514 M
(   in_port_t port = args.size\(\) < 1 ? 50000 : stoi \(args[0]\);) s
25.8 502 M (17:) s
52.2 502 M
(   try {) s
25.8 490 M (18:) s
52.2 490 M
(      if \(port <= IPPORT_USERRESERVED\) {) s
25.8 478 M (19:) s
52.2 478 M
(         throw socket_error \("unprivileged server port \(") s
25.8 466 M (20:) s
52.2 466 M
(               + to_string \(port\) + "\) <= IPPORT_USERRESERVED \(") s
25.8 454 M (21:) s
52.2 454 M
(               + to_string \(IPPORT_USERRESERVED\) + "\)"\);) s
25.8 442 M (22:) s
52.2 442 M
(      }) s
25.8 430 M (23:) s
52.2 430 M
(      // Create the socket) s
25.8 418 M (24:) s
52.2 418 M
(      server_socket listener \(port\);) s
25.8 406 M (25:) s
52.2 406 M
(      for \(;;\) {) s
25.8 394 M (26:) s
52.2 394 M
(         clog << to_string \(hostinfo\(\)\)) s
25.8 382 M (27:) s
52.2 382 M
(              << " accepting port " << to_string \(port\) << endl;) s
25.8 370 M (28:) s
52.2 370 M
(         accepted_socket client_sock;) s
25.8 358 M (29:) s
52.2 358 M
(         listener.accept \(client_sock\);) s
25.8 346 M (30:) s
52.2 346 M
(         clog << "accepted " << to_string \(client_sock\) << endl;) s
25.8 334 M (31:) s
52.2 334 M
(         try {) s
25.8 322 M (32:) s
52.2 322 M
(            for \(;;\) {) s
25.8 310 M (33:) s
52.2 310 M
(               string data;) s
25.8 298 M (34:) s
52.2 298 M
(               ssize_t nbytes = client_sock.recv \(data\);) s
25.8 286 M (35:) s
52.2 286 M
(               if \(nbytes == 0\) break;) s
25.8 274 M (36:) s
52.2 274 M
(               clog << "received \\"" << data << "\\"" << endl;) s
25.8 262 M (37:) s
52.2 262 M
(               client_sock.send \(data\);) s
25.8 250 M (38:) s
52.2 250 M
(            }) s
25.8 238 M (39:) s
52.2 238 M
(         }catch \(socket_error& error\) {) s
25.8 226 M (40:) s
52.2 226 M
(            clog << error.what\(\) << endl;) s
25.8 214 M (41:) s
52.2 214 M
(         }) s
25.8 202 M (42:) s
52.2 202 M
(         clog << "client is gone" << endl;) s
25.8 190 M (43:) s
52.2 190 M
(      }) s
25.8 178 M (44:) s
52.2 178 M
(   }catch \(socket_error& error\) {) s
25.8 166 M (45:) s
52.2 166 M
(      clog << error.what\(\) << endl;) s
25.8 154 M (46:) s
52.2 154 M
(   }) s
25.8 142 M (47:) s
52.2 142 M
(   return 0;) s
25.8 130 M (48:) s
52.2 130 M
(}) s
_R
S
%%Page: (1) 12
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (Makefile) def
/fdir () def
/ftail (Makefile) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/23/14) def
/pagecountstr (/1) def
/modtimestr (19:59:11) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(# $Id: Makefile,v 1.16 2014-05-23 13:25:17-07 - - $) s
32.4 682 M (2:) s
32.4 670 M (3:) s
52.2 670 M
(GPP        = g++ -g -O0 -Wall -Wextra -std=gnu++11) s
32.4 658 M (4:) s
32.4 646 M (5:) s
52.2 646 M
(DEPFILE    = Makefile.dep) s
32.4 634 M (6:) s
52.2 634 M
(HEADERS    = sockets.h logstream.h) s
32.4 622 M (7:) s
52.2 622 M
(CPPSRCS    = sockets.cpp client.cpp server.cpp) s
32.4 610 M (8:) s
52.2 610 M
(CLIENTOBJS = client.o sockets.o) s
32.4 598 M (9:) s
52.2 598 M
(SERVEROBJS = server.o sockets.o) s
25.8 586 M (10:) s
52.2 586 M
(OBJECTS    = ${CLIENTOBJS} ${SERVEROBJS}) s
25.8 574 M (11:) s
52.2 574 M
(EXECBINS   = client server) s
25.8 562 M (12:) s
52.2 562 M
(LISTING    = Listing.ps) s
25.8 550 M (13:) s
52.2 550 M
(SOURCES    = ${HEADERS} ${CPPSRCS} Makefile) s
25.8 538 M (14:) s
25.8 526 M (15:) s
52.2 526 M
(all: ${DEPFILE} ${EXECBINS}) s
25.8 514 M (16:) s
25.8 502 M (17:) s
52.2 502 M
(client: ${CLIENTOBJS}) s
25.8 490 M (18:) s
52.2 490 M
(        ${GPP} -o $@ ${CLIENTOBJS}) s
25.8 478 M (19:) s
25.8 466 M (20:) s
52.2 466 M
(server: ${SERVEROBJS}) s
25.8 454 M (21:) s
52.2 454 M
(        ${GPP} -o $@ ${SERVEROBJS}) s
25.8 442 M (22:) s
25.8 430 M (23:) s
52.2 430 M
(%.o: %.cpp) s
25.8 418 M (24:) s
52.2 418 M
(        ${GPP} -c $<) s
25.8 406 M (25:) s
25.8 394 M (26:) s
52.2 394 M
(ci:) s
25.8 382 M (27:) s
52.2 382 M
(        - checksource ${SOURCES}) s
25.8 370 M (28:) s
52.2 370 M
(        - cid + ${SOURCES}) s
25.8 358 M (29:) s
25.8 346 M (30:) s
52.2 346 M
(lis: all ${SOURCES} ${DEPFILE}) s
25.8 334 M (31:) s
52.2 334 M
(        mkpspdf ${LISTING} ${SOURCES} ${DEPFILE}) s
25.8 322 M (32:) s
25.8 310 M (33:) s
52.2 310 M
(clean:) s
25.8 298 M (34:) s
52.2 298 M
(        - rm ${LISTING} ${LISTING:.ps=.pdf} ${OBJECTS}) s
25.8 286 M (35:) s
25.8 274 M (36:) s
52.2 274 M
(spotless: clean) s
25.8 262 M (37:) s
52.2 262 M
(        - rm ${EXECBINS}) s
25.8 250 M (38:) s
25.8 238 M (39:) s
52.2 238 M
(dep:) s
25.8 226 M (40:) s
52.2 226 M
(        - rm ${DEPFILE}) s
25.8 214 M (41:) s
52.2 214 M
(        make --no-print-directory ${DEPFILE}) s
25.8 202 M (42:) s
25.8 190 M (43:) s
52.2 190 M
(${DEPFILE}:) s
25.8 178 M (44:) s
52.2 178 M
(        ${GPP} -MM ${CPPSRCS} >${DEPFILE}) s
25.8 166 M (45:) s
25.8 154 M (46:) s
52.2 154 M
(again: ${SOURCES}) s
25.8 142 M (47:) s
52.2 142 M
(        make --no-print-directory spotless ci all lis) s
25.8 130 M (48:) s
25.8 118 M (49:) s
52.2 118 M
(include ${DEPFILE}) s
25.8 106 M (50:) s
_R
S
%%Page: (1) 13
%%BeginPageSetup
_S
38 24 translate
/pagenum 1 def
/fname (Makefile.dep) def
/fdir () def
/ftail (Makefile.dep) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (05/23/14) def
/pagecountstr (/1) def
/modtimestr (13:25:07) def
/user_header_p true def
/user_header_left_str ($cmps109-wm/Examples/sockets/simple-sockets/) def
/user_header_center_str () def
/user_header_right_str () def
/user_footer_p false def
%%EndPageSetup
column_borders
do_header
32.4 694 M (1:) s
52.2 694 M
(sockets.o: sockets.cpp sockets.h) s
32.4 682 M (2:) s
52.2 682 M
(client.o: client.cpp logstream.h sockets.h) s
32.4 670 M (3:) s
52.2 670 M
(server.o: server.cpp logstream.h sockets.h) s
_R
S
%%Trailer
%%Pages: 13
%%DocumentNeededResources: font Times-Roman Courier-Bold Times-Bold 
%%EOF
