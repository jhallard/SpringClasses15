head	1.6;
access;
symbols;
locks;
comment	@// @;


1.6
date	2014.05.23.20.25.17;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.05.23.19.45.23;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.05.23.02.00.24;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.22.23.34.13;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.22.23.33.32;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.22.01.06.45;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: client.cpp,v 1.5 2014-05-23 12:45:23-07 - - $

#include <iostream>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#include <libgen.h>
#include <sys/types.h>
#include <unistd.h>

#include "logstream.h"
#include "sockets.h"

string progname;

int main (int argc, char** argv) {
   logstream clog (cout, basename (argv[0]));
   vector<string> args (&argv[1], &argv[argc]);
   string host = args.size() < 1 ? "localhost" : args[0];
   in_port_t port = args.size() < 2 ? 50000 : stoi (args[1]);
   clog << to_string (hostinfo()) << endl;
   try {
      clog << "connecting to " << host << " port " << port << endl;
      client_socket server (host, port);
      clog << "connected to " << to_string (server) << endl;
      for (int count = 0; count < 4; ++count) {
         string reply;
         try {
            ostringstream message;
            message << "Message " << count << " from client "
                    << getpid();
            clog << "to server: \"" << message.str() << "\"" << endl;
            server.send (message.str());
            server.recv (reply);
         }catch (socket_error& error) {
            clog << error.what() << endl;
         }
         clog << "from server: \"" << reply << "\"" << endl;
      }
   }catch (socket_error& error) {
      clog << error.what() << endl;
   }
   return 0;
}
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: client.cpp,v 1.4 2014-05-22 19:00:24-07 - - $
d14 1
a14 1
#include "socket.h"
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: client.cpp,v 1.3 2014-05-22 16:34:13-07 - - $
d9 1
d19 1
a19 1
   logstream clog (cout, argv[0]);
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: client.cpp,v 1.2 2014-05-22 16:33:32-07 - - $
d12 1
a13 2
#include "logstream.h"
#include "hostinfo.h"
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: client.cpp,v 1.1 2014-05-21 18:06:45-07 - - $
a17 5
void show_message (const string &where, const string& message) {
   cout << progname << where << " server: \"" << message
        << "\"" << endl;
}

@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: simple_client.cpp,v 1.15 2014-05-21 18:05:21-07 - - $
d13 1
d19 1
a19 1
   cout << progname << ": " << where << " server: \"" << message
d24 1
a24 1
   progname = argv[0];
a25 2
   stringstream message;
   message << "Test message from client pid " << getpid();
d28 1
a28 1
   cout << progname << ": " << to_string (hostinfo()) << endl;
d30 1
a30 2
      cout << progname << ": connecting to " << host
           << " port " << port << endl;
d32 14
a45 9
      cout << progname << ": connected to " << to_string (server)
           << endl;
      string reply;
      try {
         show_message ("to", message.str());
         server.send (message.str());
         server.recv (reply);
      }catch (socket_error& error) {
         cout << progname << ": " << error.what() << endl;
a46 2
      show_message ("from", reply);

d48 1
a48 1
      cout << progname << ": " << error.what() << endl;
@
