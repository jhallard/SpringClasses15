CMPS-109 · Advanced Programming · Spring 2014 · Test #1         1 of 1
$Id: cmps109-2014q2-exam1.mm,v 1.28 2014-04-22 18:00:17-07 - - $

.PS
examboxes(3)
.PE

No books;  No calculator;  No computer;  No email;  No internet;  No
notes;  No phone.  Neatness counts!  Do your scratch work elsewhere
and enter only your final answer into the spaces provided.

.EQ
delim $$
.EN

  1. Implicitly generated members for class foo.
      (a) Write the prototypes of the class members implicitly
          generated by a C++98 compiler.  [2pt]

      (b) Write the prototypes implicitly generated by a C++11
          compiler that were not part of C++98.  [1pt]

  2. Given the declaration map<string,string> m;  write a loop that
     explicitly uses iterators to print each key and value pair, one
     pair per line.  [2pt]

  3. Given the declaration map<string,string> m;  write a loop that
     writes out each key and value pair, one pair per line, but do not
     code anything that explicitly uses an iterator.  Hint:  use a
     C++11 feature not present in C++98.  [2pt]

  4. Write a function which will reverse a container.  Assume it has
     bidirectional iterators produced by begin() and end().  For
     example, {1,2,3,4,5} should become {5,4,3,2,1}.  You may use
        template <typename T> void std::swap (T&, T&);
     from the standard library.  [3pt]

     template <typename container>
     void reverse (container& con) {

  5. Write a function split which takes an input container and copies
     alternate elements into two output containers.  For example, if
     the input container has {1,2,3,4,5,6,7,8,9} then the first output
     container is assigned {1,3,5,7,9} and the second output container
     is assigned {2,4,6,8}.  Assume forward iterators and the function
     push_back.  [3pt]

     template <typename T>
     void split (const T& input, T& first, T&second) {

  6. Define operator= as it would appear in a .cpp file for the class
     quux.  A partial header is shown here.  [3pt]

     class quux {
        private:
           int i;
           string s;
           vector<int>* vip;
           counter* ct;
        public:
           quux& operator= (const quux&);
     };

  7. Finish the definition of class stack.  Since the stack is
     implemented as containing a vector, the implicitly provided
     members all work and need not be defined.  Define the following
     public members as inline functions which operate on the vector:
     push, pop, top, size, empty, begin, end.  Iteration on the stack
     should begin at the top and end at the bottom.  [4pt]

     template <typename T>
     class stack {
        private:
           vector<T> data;
           typedef typename vector<value_type>::const_reverse_iterator
                   const_iterator;
        public:

Multiple choice.  To the left of each question, write the letter that
indicates your answer.  Write Z if you don't want to risk a wrong
answer, which count negative points.  [12pt]

+--------------------------+-----+-----+-----------+
|number of                 |     |×1 = |     $= a$ |
|correct answers           |     |     |           |
+--------------------------+-----+-----+-----------+
|number of                 |     |×½ = |     $= b$ |
|wrong answers             |     |     |           |
+--------------------------+-----+-----+-----------+
|number of                 |     |×0 = |    0      |
|missing answers           |     |     |           |
+--------------------------+-----+-----+-----------+
|column total              |  12 |     |     $= c$ |
|$ c = max ( a - b , 0 ) $ |     |     |           |
+--------------------------+-----+-----+-----------+

  1. In the absense of specific reasons against it, what should the
     default container be?
     (A) deque
     (B) list
     (C) string
     (D) vector

  2. What class replaces pointers and does memory management by
     reference counting?
     (A) auto_ptr
     (B) reference_ptr
     (C) shared_ptr
     (D) unique_ptr

  3. If operator<< is declared as a friend of class foo, what should
     be its signature?
     (A) ostream& operator<< (
             const ostream&, const foo&);
     (B) ostream& operator<< (
             const ostream&, foo&);
     (C) ostream& operator<< (
             ostream&, const foo&);
     (D) ostream& operator<< (
             ostream&, foo&);

  4. Given the declarations
        string s; string t;
     which is impossible?
     (A) s != t and &s != &t
     (B) s != t and &s == &t
     (C) s == t and &s != &t
     (D) s == t and &s == &t

  5. The default copy and move constructors are inappropriate if a
     class object contains what kind of data member?
     (A) pointer
     (B) primitive
     (C) string
     (D) vector

  6. Given the declaration foo x;, what is the correct prototype for
     update so that it may change the contents of x if called as
     update(x)?
     (A) void update (foo&&);
     (B) void update (foo&);
     (C) void update (foo);
     (D) void update (foo*);

  7. If a function member refers to a data member x without
     qualification, it is equivalent to what expression?
     (A) auto->x
     (B) self->x
     (C) that->x
     (D) this->x

  8. What is the declaration of the postfix operator-- which is a
     member of class foo?
     (A) foo &operator-- ();
     (B) foo &operator-- (foo &);
     (C) foo operator-- (foo &, int);
     (D) foo operator-- (int);

  9. Using new but never using delete results in:
     (A) dangling pointer
     (B) memory leak
     (C) null pointer
     (D) segmentation fault

 10. If v.size() == 10, then v.end() is equivalent to the address of:
     (A) v[-1]
     (B) v[0]
     (C) v[9]
     (D) v[10]

 11. Searching for a particular item in which of these containers will
     have a running time of $ O ( log sub 2 n ) $?
     (A) list
     (B) map
     (C) unordered_map
     (D) vector

 12. Which is the proper way to catch an exception called exn?
     (A) catch (exn &&e)
     (B) catch (exn &e)
     (C) catch (exn *e)
     (D) catch (exn e)

