head	1.10;
access;
symbols;
locks;
comment	@// @;


1.10
date	2014.06.21.05.36.12;	author -;	state -;
branches;
next	1.9;

1.9
date	2014.06.21.05.35.55;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.05.30.23.42.18;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.04.09.20.29.04;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.04.09.20.28.06;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.04.09.20.27.46;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.06.29.02.18.41;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.06.29.02.14.40;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.01.09.01.02.04;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.04.10.00.40.44;	author -;	state -;
branches;
next	;


desc
@@


1.10
log
@-
@
text
@// $Id: mapitor.cpp,v 1.9 2014-06-20 22:35:55-07 - - $

//
// mapitor - put argv values into a map and iterate over them
//

#include <cstdlib>
#include <iostream>
#include <map>
#include <string>

using namespace std;

using string_int_map = map<string,int>;

void load_map (string_int_map &map, const char *const *const begin,
                                    const char *const *const end) {
   for (const char *const *itor = begin; itor != end; ++itor) {
      map.insert ({*itor, itor - begin});
   }
}

void print_map (const string_int_map &map) {

   cout << endl << "Forward iterator:" << endl;
   for (const auto& entry: map) {
      cout << "   " << entry.first << " " << entry.second << endl;
   }

   cout << endl << "Reverse iterator:" << endl;
   for (auto ritor = map.crbegin(); ritor != map.crend(); ++ritor) {
      cout << "   " << ritor->first << " " << ritor->second << endl;
   }
}

int main (int argc, char **argv) {
   string_int_map map;
   load_map (map, argv, argv + argc);
   print_map (map);
   return EXIT_SUCCESS;
}

//TEST// ./mapitor foo bar baz qux quux >mapitor.lis
//TEST// mkpspdf mapitor.ps mapitor.cpp* mapitor.lis

@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: mapitor.cpp,v 1.8 2014-05-30 16:42:18-07 - - $
d19 1
a19 1
      map.emplace ({*itor, itor - begin});
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: mapitor.cpp,v 1.7 2014-04-09 13:29:04-07 - - $
d19 1
a19 1
      map.insert (make_pair (*itor, itor - begin));
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: mapitor.cpp,v 1.6 2014-04-09 13:28:06-07 - - $
d14 1
a14 2
typedef map <string, int> string_int_map;
typedef pair <string, int> string_int_pair;
d19 1
a19 1
      map.insert (string_int_pair (*itor, itor - begin));
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: mapitor.cpp,v 1.5 2014-04-09 13:27:46-07 - - $
a26 2
   string_int_map::const_iterator fwd_itor = map.cbegin();
   string_int_map::const_iterator fwd_end = map.cend();
a31 2
   string_int_map::const_reverse_iterator rev_itor = map.crbegin();
   string_int_map::const_reverse_iterator rev_end = map.crend();
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: mapitor.cpp,v 1.4 2013-06-28 19:18:41-07 - - $
d30 1
a30 1
      cout << "   " << entry->first << " " << entry->second << endl;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: mapitor.cpp,v 1.3 2013-06-28 19:14:40-07 - - $
d29 2
a30 3
   for (; fwd_itor != fwd_end; ++fwd_itor) {
      cout << "   " << fwd_itor->first
           << " " << fwd_itor->second << endl;
d36 2
a37 3
   for (; rev_itor != rev_end; ++rev_itor) {
      cout << "   " << rev_itor->first
           << " " << rev_itor->second << endl;
d48 1
a48 1
//TEST// runprogram.perl -x mapitor.lis ./mapitor foo bar baz qux quux
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: mapitor.cpp,v 1.2 2013-01-08 17:02:04-08 - - $
d14 2
a15 1
typedef map <string, int> strintmap;
d17 4
a20 3
void load_map (strintmap &map, const char *const *const argv) {
   for (const char *const *itor = argv; *itor != NULL; ++itor) {
      map[*itor] = itor - argv;
d24 1
a24 1
void print_map (const strintmap &map) {
d27 2
a28 2
   strintmap::const_iterator fwd_itor = map.cbegin();
   strintmap::const_iterator fwd_end = map.cend();
d35 2
a36 2
   strintmap::const_reverse_iterator rev_itor = map.crbegin();
   strintmap::const_reverse_iterator rev_end = map.crend();
d44 2
a45 2
   strintmap map;
   load_map (map, argv);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: mapitor.cpp,v 1.1 2012-04-09 17:40:44-07 - - $
d25 2
a26 2
   strintmap::const_iterator fwd_itor = map.begin();
   strintmap::const_iterator fwd_end = map.end();
d33 2
a34 2
   strintmap::const_reverse_iterator rev_itor = map.rbegin();
   strintmap::const_reverse_iterator rev_end = map.rend();
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: mapitor.cpp,v 1.8 2012-03-29 23:06:48-07 - - $
d49 1
a49 1
//TEST// mkpspdf mapitor.ps mapitor.cpp mapitor.lis
@
