head	1.11;
access;
symbols;
locks;
comment	@# @;


1.11
date	2013.06.29.02.40.55;	author -;	state -;
branches;
next	1.10;

1.10
date	2013.06.29.02.39.43;	author -;	state -;
branches;
next	1.9;

1.9
date	2012.04.12.22.15.33;	author -;	state -;
branches;
next	1.8;

1.8
date	2012.04.12.22.13.54;	author -;	state -;
branches;
next	1.7;

1.7
date	2012.04.12.22.13.04;	author -;	state -;
branches;
next	1.6;

1.6
date	2012.04.12.22.09.36;	author -;	state -;
branches;
next	1.5;

1.5
date	2012.04.12.22.09.22;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.04.12.22.09.00;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.04.12.22.08.31;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.04.12.22.08.21;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.04.12.22.08.09;	author -;	state -;
branches;
next	;


desc
@@


1.11
log
@-
@
text
@// $Id: stacktrace.java,v 1.10 2013-06-28 19:39:43-07 - - $

//
// Obtain a Java StackTrace and print out the trace symbolically.
//

import static java.lang.System.*;

class stacktrace {

   static void print_stack_trace (StackTraceElement[] trace) {
      for (int index = 0; ; ++index) {
         out.printf ("trace[%d]:%n", index);
         StackTraceElement elt = trace[index];
         out.printf ("   getClassName: %s%n", elt.getClassName());
         out.printf ("   getFileName: %s%n", elt.getFileName());
         out.printf ("   getLineNumber: %d%n", elt.getLineNumber());
         out.printf ("   getMethodName: %s%n", elt.getMethodName());
         out.printf ("   isNativeMethod: %s%n", elt.isNativeMethod());
         out.printf ("   toString: %s%n", elt.toString());
      }
   }

   static void print (String[] args, int index) {
      out.printf ("args[%d]=\"%s\"%n", index, args[index]);
      print (args, index + 1);
   }

   public static void main (String[] args) {
      try {
         print (args, 0);
      }catch (Throwable error) {
         out.printf ("Error: %s%n", error);
         out.printf ("Error getCause: %s%n", error.getCause());
         out.printf ("Error getMessage: %s%n", error.getMessage());
         out.printf ("Error getLocalizedMessage: %s%n",
                     error.getLocalizedMessage());
         error.printStackTrace (out);
         print_stack_trace (error.getStackTrace());
      }
   }

}

/*
//TEST// ./stacktrace foo bar baz \
//TEST//       1>stacktrace.out 2>stacktrace.err
//TEST// more stacktrace.out stacktrace.err </dev/null \
//TEST//       >stacktrace.lis
//TEST// mkpspdf stacktrace.ps stacktrace.java* stacktrace.lis
*/

@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: stacktrace.java,v 1.9 2012-04-12 15:15:33-07 - - $
d46 1
a46 1
//TEST// ./stacktrace stacktrace foo bar baz \
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: stacktrace.java,v 1.8 2012-04-12 15:13:54-07 - - $
d45 7
a51 2
//TEST// runprogram -x stacktrace.lis ./stacktrace foo bar baz
//TEST// mkpspdf stacktrace.ps stacktrace.java stacktrace.lis
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: stacktrace.java,v 1.7 2012-04-12 15:13:04-07 - - $
d46 1
a46 1
//TEST// mkpspdf stacktrace.ps stacktrace.cpp stacktrace.lis
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: stacktrace.java,v 1.6 2012-04-12 15:09:36-07 - - $
d12 1
a12 1
      for (int index = 0; index < trace.length; ++index) {
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: stacktrace.java,v 1.5 2012-04-12 15:09:22-07 - - $
d34 3
a36 3
         out.printf ("Error Cause: %s%n", error.getCause());
         out.printf ("Error Message: %s%n", error.getMessage());
         out.printf ("Error LocalizedMessage: %s%n",
d45 3
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: stacktrace.java,v 1.4 2012-04-12 15:09:00-07 - - $
d25 1
a25 1
      out.printf ("args[%d]=\"%s\"%n", index, args[dinex]);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: stacktrace.java,v 1.3 2012-04-12 15:08:31-07 - - $
d17 1
a17 1
         out.printf ("   getLineName: %s%n", elt.getLineName());
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: stacktrace.java,v 1.2 2012-04-12 15:08:21-07 - - $
d14 1
a14 1
         StackTraceElement[] elt = trace[index];
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: stacktrace.java,v 1.1 2012-04-12 15:08:09-07 - - $
d7 1
a7 1
impost static java.lang.System.*;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d29 1
a29 1
   public Static void main (String[] args) {
@
