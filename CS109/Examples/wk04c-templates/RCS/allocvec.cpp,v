head	1.10;
access;
symbols;
locks;
comment	@// @;


1.10
date	2013.07.31.21.49.08;	author -;	state -;
branches;
next	1.9;

1.9
date	2013.07.31.21.22.41;	author -;	state -;
branches;
next	1.8;

1.8
date	2013.07.31.21.22.04;	author -;	state -;
branches;
next	1.7;

1.7
date	2013.07.31.20.32.34;	author -;	state -;
branches;
next	1.6;

1.6
date	2013.07.31.20.32.24;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.07.31.20.32.11;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.07.31.20.31.12;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.07.31.20.31.03;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.07.31.20.30.23;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.07.31.20.27.21;	author -;	state -;
branches;
next	;


desc
@@


1.10
log
@-
@
text
@// $Id: allocvec.cpp,v 1.9 2013-07-31 14:22:41-07 - - $

//
// Vector using allocate/deallocate/construct/destroy.
// With iterator/const_iterator.
//

#include <cstddef>
#include <initializer_list>

using namespace std;

template <typename T>
class allocvec {
   public:
      typedef T value_type;
      typedef value_type& reference;
      typedef const value_type& const_reference;
      typedef value_type* pointer;
      typedef const value_type* const_pointer;
      typedef ptrdiff_t difference_type;
      typedef size_t size_type;
      template <typename TI, typename Pointer = TI*,
                typename Reference = TI&> class allocvec_iterator;
      typedef allocvec_iterator<value_type> iterator;
      typedef allocvec_iterator<const value_type> const_iterator;
   private:
      size_type _size;
      size_type _capacity;
      pointer _data;
   public:

      // Replace implicit members.
      allocvec();
      allocvec (const allocvec& );
      allocvec (allocvec&&);
      allocvec& operator= (const allocvec& );
      allocvec& operator= (allocvec&&);
      ~allocvec();

      // More constructors.
      explicit allocvec (size_type size = 0);
      explicit allocvec (initializer_list<value_type> ilist);

      // Iterators.
      iterator begin();
      const_iterator begin() const;
      const_iterator cbegin() const;
      iterator end();
      const_iterator end() const;
      const_iterator cend() const;

      // Capacity.
      size_type size() const;
      size_type capacity() const;
      bool empty() const;
      void reserve (size_type size);

      // Access.
      reference operator[] (size_type pos);
      const_reference operator[] (size_type pos) const;
      reference front();
      const_reference front() const;
      reference back();
      const_reference back() const;

      // Modifiers.
      void push_back (const value_type& );
      void pop_back();
};

template <typename T>
template <typename TI, typename Pointer, typename Reference>
class allocvec<T>::allocvec_iterator {
   public:
      typedef Pointer pointer;
      typedef Reference reference;
   private:
      pointer _datum;
      allocvec_iterator (pointer);
   public:
      allocvec_iterator(): _datum(NULL) {};
      // Other implicit members by default OK.
      allocvec_iterator& operator++();
      allocvec_iterator operator++ (int);
      allocvec_iterator& operator--();
      allocvec_iterator operator-- (int);
      reference operator*();
      const reference operator*() const;
      pointer operator->();
      const pointer operator->() const;
      bool operator== (const allocvec_iterator& that) const;
      bool operator!= (const allocvec_iterator& that) const;
};

@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: allocvec.cpp,v 1.8 2013-07-31 14:22:04-07 - - $
d23 2
a24 1
      template <typename TI> class allocvec_iterator;
d72 2
a73 1
template <typename T, typename Pointer = T*, typename Reference = T&>
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: allocvec.cpp,v 1.7 2013-07-31 13:32:34-07 - - $
d9 1
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: allocvec.cpp,v 1.6 2013-07-31 13:32:24-07 - - $
d16 4
a19 4
      typedef value_type &reference;
      typedef const value_type &const_reference;
      typedef value_type *pointer;
      typedef const value_type *const_pointer;
a22 1
      friend class allocvec<value_type>::allocvec_iterator;
d25 67
a91 1
}
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: allocvec.cpp,v 1.5 2013-07-31 13:32:11-07 - - $
d23 1
a23 1
      friend class tvector<value_type>::allocvec_iterator;
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: allocvec.cpp,v 1.4 2013-07-31 13:31:12-07 - - $
d22 1
a22 1
      template <typename T> class allocvec_iterator;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: allocvec.cpp,v 1.3 2013-07-31 13:31:03-07 - - $
d22 2
a25 2
      class allocvec_iterator;
      friend class tvector<value_type>::allocvec_iterator;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: allocvec.cpp,v 1.2 2013-07-31 13:30:23-07 - - $
d8 1
a8 1
#include <cstdef>
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: allocvec.cpp,v 1.1 2013-07-31 13:27:21-07 - - $
d8 4
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d9 15
a23 1
class
@
