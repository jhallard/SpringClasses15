head	1.14;
access;
symbols;
locks;
comment	@# @;


1.14
date	2012.05.24.22.36.26;	author -;	state -;
branches;
next	1.13;

1.13
date	2012.05.24.22.29.49;	author -;	state -;
branches;
next	1.12;

1.12
date	2012.05.24.04.00.24;	author -;	state -;
branches;
next	1.11;

1.11
date	2012.05.24.03.57.28;	author -;	state -;
branches;
next	1.10;

1.10
date	2012.05.24.03.54.51;	author -;	state -;
branches;
next	1.9;

1.9
date	2012.05.24.03.48.11;	author -;	state -;
branches;
next	1.8;

1.8
date	2012.05.24.03.47.48;	author -;	state -;
branches;
next	1.7;

1.7
date	2012.05.24.03.47.15;	author -;	state -;
branches;
next	1.6;

1.6
date	2012.05.24.03.41.28;	author -;	state -;
branches;
next	1.5;

1.5
date	2012.05.24.03.41.01;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.05.24.03.40.35;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.05.24.03.38.35;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.05.24.03.38.10;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.05.24.03.27.50;	author -;	state -;
branches;
next	;


desc
@@


1.14
log
@-
@
text
@// $Id: hellothread.java,v 1.13 2012-05-24 15:29:49-07 - - $

//
// Hello World example using two threads.
// class greeter extends Thread.
//

import static java.lang.System.*;
import static java.lang.String.*;

class hellothread {
   static long nanostart = nanoTime();

   static void print (String fmt, Object... args) { 
      Thread self = Thread.currentThread();
      double millisec = (nanoTime() - nanostart) / 1e6;
      String ident = format ("%10.3f: %s(%d): ",
                             millisec, self.getName(), self.getId());
      String message = format (fmt, args);
      out.println (ident + message);
      out.flush();
   }

   static class greeter extends Thread {
      long delay_msec;
      greeter (String threadname, int delay) {
         super (threadname);
         delay_msec = delay;
      }
      public void run() {
         print ("starting");
         for (int count = 0; count < 10; ++count) {
            try {
               sleep (delay_msec);
            }catch (InterruptedException exn) {
               print ("interrupted: %s", exn.getMessage());
            }
            print ("slept %d msec, %dth time", delay_msec, count);
         }
         print ("finished");
      }
   }

   public static void main (String[] args) {
      print ("starting");
      greeter hello = new greeter ("Hello", 500);
      greeter world = new greeter ("World", 800);
      hello.start();
      world.start();
      print ("finished");
   }

}

//TEST// runprog -x hellothread.lis hellothread
//TEST// mkpspdf hellothread.ps hellothread.java* hellothread.lis

@


1.13
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.12 2012-05-23 21:00:24-07 - - $
a24 1
      String message;
d26 2
a27 2
      greeter (String init, int delay) {
         message = init;
d31 1
a31 1
         print ("starting", message);
d36 1
a36 1
               print ("interrupted: %s", message, exn);
d38 1
a38 2
            print ("slept %d msec, %dth time",
                   message, delay_msec, count);
d40 1
a40 1
         print ("finished", message);
@


1.12
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.11 2012-05-23 20:57:28-07 - - $
d5 1
a5 1
// class simple extends Thread.
d14 7
a20 3
   static void print (String fmt, Object... args) {
      out.printf ("%10.3f msec: %s%n", (nanoTime() - nanostart) / 1e6,
                  format (fmt, args));
d32 1
a32 1
         print ("greeter %s starting.", message);
d37 1
a37 1
               print ("greeter %s interrupted: %s", message, exn);
d39 1
a39 1
            print ("greeter %s slept %d msec, %dth time.",
d42 1
a42 1
         print ("greeter %s finished.", message);
d47 1
a47 1
      print ("main starting.");
d52 1
a52 1
      print ("main finished.");
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.10 2012-05-23 20:54:51-07 - - $
d15 1
a15 1
      out.printf ("%10.3fmsec: %s%n", (nanoTime() - nanostart) / 1e6,
d20 1
a20 1
   static class greet extends Thread {
d23 1
a23 1
      greet (String init, int delay) {
d28 1
a28 1
         print ("greet %s starting.", message);
d33 1
a33 1
               print ("%s interrupted: %s", message, exn);
d35 1
a35 1
            print ("%s slept %d msec, %dth time.",
d38 1
a38 1
         print ("greet %s finished.", message);
d44 2
a45 2
      greet hello = new greet ("Hello", 500);
      greet world = new greet ("World", 800);
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.9 2012-05-23 20:48:11-07 - - $
d15 1
a15 1
      out.printf ("%10.6f %s%n", (nanoTime() - nanostart) / 1e9,
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.8 2012-05-23 20:47:48-07 - - $
d15 2
a16 2
      out.printf ("%10.6f " + fmt + "%n",
                  (nanoTime() - nanostart) / 1e9, args);
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.7 2012-05-23 20:47:15-07 - - $
a16 1
      out.println (message);
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.6 2012-05-23 20:41:28-07 - - $
d12 1
a12 1
   long nanostart = nanoTime();
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.5 2012-05-23 20:41:01-07 - - $
d12 1
d15 2
a16 2
      String message = format ("%tT: ", currentTimeMillis())
                     + format (fmt, args);
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.4 2012-05-23 20:40:35-07 - - $
d14 1
a14 1
      String message = format ("%T: ", currentTimeMillis())
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.3 2012-05-23 20:38:35-07 - - $
d54 1
a54 1
//TEST// mkpspdf hellothread.ps hellothread.java* hellothread.llis
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.2 2012-05-23 20:38:10-07 - - $
d13 1
a13 1
   static void print (Object... fmtargs) {
d15 1
a15 1
                     + format (fmtargs);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.1 2012-05-23 20:27:50-07 - - $
d48 1
a48 1
      printf ("main finished.");
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.10 2009-02-26 16:50:46-08 - - $
d9 1
d13 7
d28 1
a28 2
         out.printf ("greet %s starting.%n", message);
         out.flush();
d33 1
a33 2
               out.printf ("%s interrupted: %s%n", message, exn);
               out.flush();
d35 2
a36 3
            out.printf ("%s slept %d msec, %dth time.%n",
                        message, delay_msec, count);
            out.flush();
d38 1
a38 2
         out.printf ("greet %s finished.%n", message);
         out.flush();
d43 1
a43 1
      out.printf ("main starting.%n");
d48 1
a48 1
      out.printf ("main finished.%n");
d54 1
a54 1
//TEST// mkpspdf hellothread.ps hellothread.java
@
