head	1.11;
access;
symbols;
locks;
comment	@# @;


1.11
date	2013.08.13.02.24.37;	author -;	state -;
branches;
next	1.10;

1.10
date	2012.05.24.23.09.43;	author -;	state -;
branches;
next	1.9;

1.9
date	2012.05.24.22.37.58;	author -;	state -;
branches;
next	1.8;

1.8
date	2012.05.24.22.30.36;	author -;	state -;
branches;
next	1.7;

1.7
date	2012.05.24.22.21.16;	author -;	state -;
branches;
next	1.6;

1.6
date	2012.05.24.22.19.50;	author -;	state -;
branches;
next	1.5;

1.5
date	2012.05.24.22.19.26;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.05.24.22.18.55;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.05.24.04.11.25;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.05.24.04.10.53;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.05.24.04.10.22;	author -;	state -;
branches;
next	;


desc
@@


1.11
log
@-
@
text
@// $Id: hellorunnable.java,v 1.10 2012-05-24 16:09:43-07 - - $

//
// Hello World example using two threads.
// class greeter implements Runnable.
//

import static java.lang.System.*;
import static java.lang.String.*;

class hellorunnable {
   static long nanostart = nanoTime();

   static void print (String fmt, Object... args) { 
      Thread self = Thread.currentThread();
      double millisec = (nanoTime() - nanostart) / 1e6;
      String ident = format ("%10.3f: %s(%d): ",
                             millisec, self.getName(), self.getId());
      String message = format (fmt, args);
      out.println (ident + message);
      out.flush();
   }

   static class greeter implements Runnable {
      String threadname;
      long delay_msec;
      greeter (String _threadname, int _delay_msec) {
         threadname = _threadname;
         delay_msec = _delay_msec;
      }
      public void run() {
         Thread self = Thread.currentThread();
         self.setName (threadname);
         print ("starting");
         for (int count = 0; count < 10; ++count) {
            try {
               Thread.sleep (delay_msec);
            }catch (InterruptedException exn) {
               print ("interrupted: %s", exn.getMessage());
            }
            print ("slept %d msec, %dth time", delay_msec, count);
         }
         print ("finished");
      }
   }

   public static void main (String[] args) {
      print ("starting");
      Thread hello = new Thread (new greeter ("Hello", 500));
      Thread world = new Thread (new greeter ("World", 800));
      hello.start();
      world.start();
      print ("finished");
   }

}

//TEST// runprog -x hellorunnable.lis hellorunnable
//TEST// mkpspdf hellorunnable.ps hellorunnable.java* hellorunnable.lis

@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: hellorunnable.java,v 1.9 2012-05-24 15:37:58-07 - - $
d37 1
a37 1
               self.sleep (delay_msec);
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: hellorunnable.java,v 1.8 2012-05-24 15:30:36-07 - - $
d25 1
a25 1
      Thread self = Thread.currentThread();
d27 2
a28 2
      greeter (String threadname, int _delay_msec) {
         self.setName (threadname);
d32 2
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: hellorunnable.java,v 1.7 2012-05-24 15:21:16-07 - - $
a25 1
      String message;
d27 3
a29 3
      greeter (String init, int delay) {
         message = init;
         delay_msec = delay;
d32 1
a32 1
         print ("starting", message);
d37 1
a37 1
               print ("interrupted: %s", message, exn);
d39 1
a39 2
            print ("slept %d msec, %dth time",
                   message, delay_msec, count);
d41 1
a41 1
         print ("finished", message);
d47 2
a48 2
      Thread hello = new Thread (new greeter ("Hello", 500), "hello");
      Thread world = new Thread (new greeter ("World", 800), "world");
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: hellorunnable.java,v 1.6 2012-05-24 15:19:50-07 - - $
d14 1
a14 1
   static void print (String fmt, Object... args) {
d17 4
a20 5
      StringBuffer buffer = new StringBuffer();
      buffer.append (format ("%10.3f msec: %s(%d): ",
                             millisec, self.getName(), self.getId()))
            .append (format (fmt, args));
      out.println (buffer);
d25 1
d33 1
a33 1
         print ("greeter %s starting.", message);
d36 1
a36 1
               Thread.currentThread().sleep (delay_msec);
d38 1
a38 1
               print ("greeter %s interrupted: %s", message, exn);
d40 1
a40 1
            print ("greeter %s slept %d msec, %dth time.",
d43 1
a43 1
         print ("greeter %s finished.", message);
d48 1
a48 1
      print ("main starting.");
d53 1
a53 1
      print ("main finished.");
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: hellorunnable.java,v 1.5 2012-05-24 15:19:26-07 - - $
d18 1
a18 1
      buffer.append (format ("%10.3f msec: %s%d: ",
d49 2
a50 2
      Thread hello = new Thread (new greeter ("Hello", 500));
      Thread world = new Thread (new greeter ("World", 800));
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: hellorunnable.java,v 1.4 2012-05-24 15:18:55-07 - - $
d17 1
a17 1
      StringBuffer buffer;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: hellorunnable.java,v 1.3 2012-05-23 21:11:25-07 - - $
d16 1
a16 1
      long millisec = (nanoTime() - nanostart) / 1e6;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: hellorunnable.java,v 1.2 2012-05-23 21:10:53-07 - - $
d15 7
a21 2
      out.printf ("%10.3f msec: %s%n", (nanoTime() - nanostart) / 1e6,
                  format (fmt, args));
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: hellorunnable.java,v 1.1 2012-05-23 21:10:22-07 - - $
d44 2
a45 2
      greeter hello = new Thread (new greeter ("Hello", 500));
      greeter world = new Thread (new greeter ("World", 800));
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: hellothread.java,v 1.12 2012-05-23 21:00:24-07 - - $
d31 1
a31 1
               sleep (delay_msec);
@
