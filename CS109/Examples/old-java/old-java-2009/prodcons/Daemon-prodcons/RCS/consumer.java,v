head	1.6;
access;
symbols;
locks;
comment	@# @;


1.6
date	2009.02.28.05.13.10;	author -;	state -;
branches;
next	1.5;

1.5
date	2009.02.28.05.11.48;	author -;	state -;
branches;
next	1.4;

1.4
date	2009.02.28.05.11.03;	author -;	state -;
branches;
next	1.3;

1.3
date	2009.02.28.05.06.00;	author -;	state -;
branches;
next	1.2;

1.2
date	2009.02.28.05.04.45;	author -;	state -;
branches;
next	1.1;

1.1
date	2009.02.27.04.47.05;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: consumer.java,v 1.5 2009-02-27 21:11:48-08 - - $

import static java.lang.System.*;

class consumer <item_t> implements Runnable {

   private buffer <item_t> inbuf;
   private String name;
   long delay_msec;

   consumer (buffer inbuf, String name, long delay_msec) {
      this.inbuf = inbuf;
      this.name = name;
      this.delay_msec = delay_msec;
   }

   public void run () {
      stamp.printf ("consumer %s starting%n", name);
      for (;;) {
         item_t item = inbuf.get ();
         try {
            Thread.currentThread ().sleep (delay_msec);
         }catch (InterruptedException exn) {
            stamp.printf ("consumer %s: %s%n", name, exn);
         }
         stamp.printf ("consumer %s: get() = \"%s\"%n", name, item);
      }
      //stamp.printf ("consumer %s finished%n", name);
   }
   
}

@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: consumer.java,v 1.4 2009-02-27 21:11:03-08 - - $
a18 1
      Thread.currentThread ().setDaemon (true);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: consumer.java,v 1.3 2009-02-27 21:06:00-08 - - $
d19 1
a19 1
      setDaemon (true); // Will automatically exit when produces exit.
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: consumer.java,v 1.2 2009-02-27 21:04:45-08 - - $
d19 1
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: consumer.java,v 1.1 2009-02-26 20:47:05-08 - - $
d28 1
a28 1
      stamp.printf ("consumer %s finished%n", name);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: consumer.java,v 1.3 2009-02-26 20:22:45-08 - - $
a20 1
         if (item == null) break;
@
