head	1.3;
access;
symbols;
locks;
comment	@# @;


1.3
date	2009.02.28.01.46.18;	author -;	state -;
branches;
next	1.2;

1.2
date	2009.02.28.01.46.00;	author -;	state -;
branches;
next	1.1;

1.1
date	2009.02.27.04.40.16;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: main.java,v 1.2 2009-02-27 17:46:00-08 - - $

import static java.lang.System.*;

class main {

   public static void main (String[] args) {
      stamp.printf ("main starting%n");
      String[] latin = {
         "prîmus", "secundus,", "tertius", "quârtus", "quîntus",
         "sextus", "septimus", "octâvus", "nônus", "decimus"
      };
      String[] greek = {
         "prôtos", "deuteros", "tritos", "tetartos", "pentos",
         "hektos", "hebdomos", "ogdoos", "enatos", "dekatos"
      };
      buffer <String> buf = new semabuffer (5);
      Thread[] producers = {
         new Thread (new producer <String> (buf, "Latin", 100, latin)),
         new Thread (new producer <String> (buf, "Greek", 300, greek))
      };
      Thread[] consumers = {
         new Thread (new consumer (buf, "Foo", 200)),
         new Thread (new consumer (buf, "Bar", 500))
      };
      for (Thread thread: producers) thread.start ();
      for (Thread thread: consumers) thread.start ();
      for (int itor = 0; itor < producers.length; ++itor) {
         try {
            producers[itor].join ();
         }catch (InterruptedException exn) {
            stamp.printf ("main join: %s%n", exn);
         }
      }
      buf.producers_finished ();
      stamp.printf ("main finished%n");
   }

}
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: main.java,v 1.11 2009-02-27 17:44:37-08 - - $
d17 1
a17 1
      buffer <String> buf = new semabufffer (5);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: main.java,v 1.8 2009-02-26 20:22:46-08 - - $
d17 1
a17 1
      buffer <String> buf = new semabuffer (5);
d22 3
a24 2
      for (int itor = 0; itor < producers.length; ++itor) {
         producers[itor].start ();
d26 2
a27 2
      new Thread (new consumer (buf, "Foo", 200)).start ();
      new Thread (new consumer (buf, "Bar", 500)).start ();
@
