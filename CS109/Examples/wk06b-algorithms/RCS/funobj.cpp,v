head	1.6;
access;
symbols;
locks;
comment	@// @;


1.6
date	2012.06.04.21.47.53;	author -;	state -;
branches;
next	1.5;

1.5
date	2012.06.04.21.46.27;	author -;	state -;
branches;
next	1.4;

1.4
date	2012.06.04.21.45.44;	author -;	state -;
branches;
next	1.3;

1.3
date	2012.06.04.21.45.13;	author -;	state -;
branches;
next	1.2;

1.2
date	2012.06.04.21.44.57;	author -;	state -;
branches;
next	1.1;

1.1
date	2012.06.04.21.43.27;	author -;	state -;
branches;
next	;


desc
@@


1.6
log
@-
@
text
@// $Id: funobj.cpp,v 1.5 2012-06-04 14:46:27-07 - - $

#include <algorithm>
#include <iostream>
#include <string>
#include <vector>

using namespace std;

template <class item_t>
struct incrcomp {
   bool operator () (const item_t &left, const item_t &right) {
      return left < right;
   }
};

template <class item_t>
struct decrcomp {
   bool operator () (const item_t &left, const item_t &right) {
      return left > right;
   }
};

template <class itor_t>
void print (string label, const itor_t &begin, const itor_t &end) {
   cout << endl << label << " order:" << endl;
   for (itor_t itor = begin; itor != end; ++itor) {
      cout << " " << *itor;
   }
   cout << endl;
}

int main () {
   char *array[] = {"hello", "world", "foo", "bar", "baz"};
   char **end = array + sizeof array / sizeof *array;

   vector<string> vec;
   for (char **itor = array; itor < end; ++itor) vec.push_back (*itor);
   print ("initial", vec.begin(), vec.end());

   sort (vec.begin(), vec.end());
   print ("default sort", vec.begin(), vec.end());

   sort (vec.begin(), vec.end(), incrcomp<string>());
   print ("incrcomp<string>", vec.begin(), vec.end());

   sort (vec.begin(), vec.end(), decrcomp<string>());
   print ("decrcomp<string>", vec.begin(), vec.end());

   return 0;
}

//TEST// ./funobj >funobj.out 2>&1
//TEST// mkpspdf funobj.ps funobj.cpp* funobj.out

@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: funobj.cpp,v 1.4 2012-06-04 14:45:44-07 - - $
d25 2
a26 1
void print (const itor_t &begin, const itor_t &end) {
d39 1
a39 1
   print (vec.begin(), vec.end());
d42 1
a42 1
   print (vec.begin(), vec.end());
d45 1
a45 1
   print (vec.begin(), vec.end());
d48 1
a48 1
   print (vec.begin(), vec.end());
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: funobj.cpp,v 1.2 2012-06-04 14:44:57-07 - - $
d43 1
a43 1
   sort (vec.begin(), vec.end(), incrcomp());
d46 1
a46 1
   sort (vec.begin(), vec.end(), decrcomp());
@


1.3
log
@-
@
text
@d43 1
a43 1
   sort (vec.begin(), vec.end(), incrobj());
d46 1
a46 1
   sort (vec.begin(), vec.end(), decrobj());
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: funobj.cpp,v 1.1 2012-06-04 14:43:27-07 - - $
d38 1
a38 1
   print<string> (vec.begin(), vec.end());
d41 1
a41 1
   print<string> (vec.begin(), vec.end());
d44 1
a44 1
   print<string> (vec.begin(), vec.end());
d47 1
a47 1
   print<string> (vec.begin(), vec.end());
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: funobj.cc,v 1.14 2009-02-26 16:28:33-08 - - $
d24 4
a27 5
template <class item_t>
void print (typename vector<item_t>::const_iterator begin,
            typename const vector<item_t>::const_iterator end) {
   for (; begin != end; ++begin) {
      cout << *begin << endl;
@
