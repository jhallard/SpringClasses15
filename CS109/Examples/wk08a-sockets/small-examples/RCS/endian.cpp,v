head	1.3;
access;
symbols;
locks;
comment	@// @;


1.3
date	2014.05.21.04.34.26;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.21.04.26.36;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.21.04.26.20;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@// $Id: endian.cpp,v 1.2 2014-05-20 21:26:36-07 - - $

// Illustrate endianness.

#include <cstdio>
using namespace std;

#include <arpa/inet.h>

union union32 {
   uint32_t num;
   char chr[4];
};

union union16 {
   uint16_t num;
   char chr[2];
};

void print32 (const char *label, const union32& val) {
   printf ("%-8s: 0x%08X =", label, val.num);
   for (int i = 0; i < 4; ++i) printf (" %02X", val.chr[i]);
   printf ("\n");
}

void print16 (const char *label, const union16& val) {
   printf ("%-8s: 0x%04X =", label, val.num);
   for (int i = 0; i < 2; ++i) printf (" %02X", val.chr[i]);
   printf ("\n");
}

int main () {

   union union32 n32 = {0x12345678};
   print32 ("Original", n32);
   n32.num = htonl (n32.num);
   print32 ("Network", n32);
   n32.num = ntohl (n32.num);
   print32 ("Host", n32);

   union union16 n16 = {0x1234};
   print16 ("Original", n16);
   n16.num = htons (n16.num);
   print16 ("Network", n16);
   n16.num = ntohs (n16.num);
   print16 ("Host", n16);

   return 0;
}
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: endian.cpp,v 1.1 2014-05-20 21:26:20-07 - - $
d10 22
d33 16
a48 8
   union {
      uint32_t num;
      char chr[4];
   } n32 = {0x12345678};
   union {
      uint16_t num;
      char chr[2];
   } n16 = {0x1234};
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d14 1
a14 1
   } n32 = 0x12345678;
d18 1
a18 1
   } n16 = 0x1234;
@
