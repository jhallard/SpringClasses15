head	1.4;
access;
symbols;
locks;
comment	@// @;


1.4
date	2014.05.19.23.28.15;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.17.06.06.12;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.17.05.18.59;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.17.04.08.34;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@// $Id: client_socket.cpp,v 1.3 2014-05-16 23:06:12-07 - - $

#include <string>
using namespace std;

#include "client_socket.h"
#include "socket_error.h"

client_socket::client_socket (string host, in_port_t port) {
   socket::create();
   socket::connect (host, port);
}

@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: client_socket.cpp,v 1.2 2014-05-16 22:18:59-07 - - $
d9 1
a9 1
client_socket::client_socket (string host, int port) {
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: client_socket.cpp,v 1.1 2014-05-16 21:08:34-07 - - $
a8 4
void error (const string& message) {
   throw socket_error (message);
}

a13 14

client_socket& client_socket::operator<< (const string& message) {
   ssize_t nbytes = socket::send (message);
   if (nbytes == 0) error ("socket::send() failed");
   return *this;

}

client_socket& client_socket::operator>> (string& message) {
   ssize_t nbytes = socket::recv (message);
   if (nbytes == 0) error ("socket::recv() failed");
   return *this;
}

@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: client_socket.cpp,v 1.1 2014-05-16 21:07:27-07 - - $
d14 2
a15 4
   bool created = socket::create();
   if (not created) error ("socket::create() failed");
   bool connected = socket::connect (host, port);
   if (not connected) error ("socket::connect() failed");
d20 2
a21 2
   bool sent = socket::send (message);
   if (not sent) error ("socket::send() failed");
d27 2
a28 2
   bool received = socket::recv (message);
   if (not received) error ("socket::recv() failed");
@
