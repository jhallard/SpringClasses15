head	1.12;
access;
symbols;
locks;
comment	@// @;


1.12
date	2013.08.09.22.51.26;	author -;	state -;
branches;
next	1.11;

1.11
date	2013.08.09.22.51.06;	author -;	state -;
branches;
next	1.10;

1.10
date	2013.08.09.22.50.53;	author -;	state -;
branches;
next	1.9;

1.9
date	2013.08.09.22.49.06;	author -;	state -;
branches;
next	1.8;

1.8
date	2013.08.09.22.42.50;	author -;	state -;
branches;
next	1.7;

1.7
date	2013.08.09.22.42.27;	author -;	state -;
branches;
next	1.6;

1.6
date	2013.08.09.22.42.00;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.08.09.22.41.01;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.08.09.22.40.39;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.08.09.22.39.27;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.08.09.22.38.31;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.08.09.22.37.56;	author -;	state -;
branches;
next	;


desc
@@


1.12
log
@-
@
text
@// $Id: complex.cpp,v 1.11 2013-08-09 15:51:06-07 - - $

#include <complex>
#include <iomanip>
#include <iostream>
using namespace std;

typedef complex<double> dcomplex;

#define D(X,V) cout << "const dcomplex " #X " = " #V ";" << endl; \
               const dcomplex X = V; \
               cout << #X << " = " << X << endl;

int main() {
   cout << setprecision(15);
   D(C_N1,-1);
   D(C_I,sqrt(C_N1));
   D(C_PI,M_PI);
   D(C_I_PI,C_I * M_PI);
   D(C_EXP,exp (C_I_PI));
   D(E_I_PI_P1,C_EXP + 1.0);
   return 0;
}
@


1.11
log
@-
@
text
@d1 1
a1 1
// $Id: complex.cpp,v 1.10 2013-08-09 15:50:53-07 - - $
d15 1
a15 1
   cout << setprecision(16);
@


1.10
log
@-
@
text
@d1 1
a1 1
// $Id: complex.cpp,v 1.9 2013-08-09 15:49:06-07 - - $
d21 1
a21 1
   D(E_I_PI_P1,C_EXP + 1);
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: complex.cpp,v 1.8 2013-08-09 15:42:50-07 - - $
d12 1
a12 1
               cout << #X << " = " << X;
d17 5
a21 12

/*
   const dcomplex C_N1 = -1;
   SHOW(C_N1);

   const dcomplex C_I = sqrt (C_N1);
   SHOW(

   const dcomplex C_PI = M_PI;
   cout << "C_PI = " << C_PI << endl;
*/

@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: complex.cpp,v 1.7 2013-08-09 15:42:27-07 - - $
d8 6
d15 4
a18 1
   typedef complex<double> dcomplex;
d20 2
d23 2
a25 2
   cout << setprecision(16);
   cout << "C_I = " << C_I << endl;
d27 2
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: complex.cpp,v 1.6 2013-08-09 15:42:00-07 - - $
d4 1
d13 1
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: complex.cpp,v 1.5 2013-08-09 15:41:01-07 - - $
d9 2
a10 1
   const dcomplex C_I = sqrt (dcomplex (-1.0));
d13 1
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: complex.cpp,v 1.4 2013-08-09 15:40:39-07 - - $
d9 3
a11 2
   const dcomplex sqrtneg1 = sqrt (dcomplex (-1.0));
   cout << "sqrt(-1) = " << sqrtneg1 << endl;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: complex.cpp,v 1.3 2013-08-09 15:39:27-07 - - $
d9 1
a9 1
   const dcomplex sqrtneg1 = sqrt (complex (-1.0));
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: complex.cpp,v 1.2 2013-08-09 15:38:31-07 - - $
d9 1
a9 1
   const dcomplex sqrtneg1 = sqrt (-1.0);
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: complex.cpp,v 1.1 2013-08-09 15:37:56-07 - - $
d8 2
a9 2
   typedef complex<double> complex;
   const complex sqrtneg1 = sqrt (-1);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d9 3
@
