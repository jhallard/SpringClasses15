head	1.5;
access;
symbols;
locks;
comment	@// @;


1.5
date	2015.04.01.00.55.46;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.06.24.01.23.17;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.06.21.04.50.04;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.06.21.04.49.36;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.06.21.04.49.23;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: args.cpp,v 1.4 2014-06-23 18:23:17-07 - - $

//
// NAME
//    args - print out the argument vector
//
// SYNOPSIS
//    args [string...]
//
// DESCRIPTION
//    Prints out its arguments to stdout, one per line.
//

#include <cstdlib>
#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main (int argc, char** argv) {
   string execname {argv[0]};
   vector<string> args (&argv[1], &argv[argc]);
   cout << "execname = " << execname << endl;
   for (const auto& arg: args) cout << arg << endl;
   return EXIT_SUCCESS;
}

//TEST// ./args foo bar baz qux quux >args.lis 2>&1
//TEST// mkpspdf args.ps args.cpp* args.lis

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: args.cpp,v 1.3 2014-06-20 21:50:04-07 - - $
d16 1
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: args.cpp,v 1.2 2014-06-20 21:49:36-07 - - $
d22 1
a22 1
   cout << "execname = " << endl;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: args.cpp,v 1.1 2014-06-20 21:49:23-07 - - $
d27 2
a28 2
//TEST// ./args foo bar baz qux quux >argx.lis 2>&1
//TEST// mkpspdf argx.ps argx.cpp* argx.lis
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: argx.cpp,v 1.5 2014-03-31 13:02:14-07 - - $
d27 1
a27 1
//TEST// ./argx foo bar baz qux quux >argx.lis 2>&1
@
