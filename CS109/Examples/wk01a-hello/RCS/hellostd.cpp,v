head	1.8;
access;
symbols;
locks;
comment	@// @;


1.8
date	2015.04.01.00.52.53;	author -;	state -;
branches;
next	1.7;

1.7
date	2015.04.01.00.52.24;	author -;	state -;
branches;
next	1.6;

1.6
date	2015.04.01.00.50.44;	author -;	state -;
branches;
next	1.5;

1.5
date	2015.04.01.00.47.33;	author -;	state -;
branches;
next	1.4;

1.4
date	2015.04.01.00.47.00;	author -;	state -;
branches;
next	1.3;

1.3
date	2015.04.01.00.45.05;	author -;	state -;
branches;
next	1.2;

1.2
date	2015.04.01.00.44.54;	author -;	state -;
branches;
next	1.1;

1.1
date	2015.04.01.00.43.41;	author -;	state -;
branches;
next	;


desc
@@


1.8
log
@-
@
text
@// $Id: hellostd.cpp,v 1.7 2015-03-31 17:52:24-07 - - $

//
// NAME
//    hellostd - the std:: version of the ``hello world'' program
//
// SYNOPSIS
//    hellostd
//
// DESCRIPTION
//    Prints out the message ``Hello, std::world!''.
//    Does not use using namespace std.
//    Also uses operator<< in function syntax instead of as operator.
//

#include <cstdlib>
#include <iostream>

int main (int argc, char **argv) {
   (void) argc; // warning: unused parameter 'argc' [-Wunused-parameter]
   std::cout.operator<< ("Hello, std::world!").operator<< (std::endl);
   std::cout.operator<< ("My name is ").operator<< (argv[0]).operator<< (std::endl);
   return EXIT_SUCCESS;
}

/*
//TEST// ./hellostd 1>hellostd.out 2>hellostd.err
//TEST// echo EXIT STATUS = $? >hellostd.exit
//TEST// catnv hellostd.cpp.log hellostd.out hellostd.err \
//TEST//       hellostd.exit >hellostd.lis
//TEST// rm -v hellostd.cpp.log hellostd.out hellostd.err hellostd.exit
//TEST// mkpspdf hellostd.ps hellostd.cpp hellostd.lis
*/

@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: hellostd.cpp,v 1.5 2015-03-31 17:47:33-07 - - $
d21 2
a22 2
   std::cout.operator<< (string ("Hello, std::world!")).operator<< (std::endl);
   std::cout.operator<< (string ("My name is ")).operator<< (argv[0]).operator<< (std::endl);
@


1.6
log
@-
@
text
@d21 2
a22 3
   std::operator<< (std::cout, "Hello");
   //std::cout.operator<< ("Hello, std::world!").operator<< (std::endl);
   //std::cout.operator<< ("My name is ").operator<< (argv[0]).operator<< (std::endl);
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: hellostd.cpp,v 1.4 2015-03-31 17:47:00-07 - - $
d21 3
a23 2
   std::cout.operator<< ("Hello, std::world!").operator<< (std::endl);
   std::cout.operator<< ("My name is ").operator<< (argv[0]).operator<< (std::endl);
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: hellostd.cpp,v 1.3 2015-03-31 17:45:05-07 - - $
d20 1
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: hellostd.cpp,v 1.2 2015-03-31 17:44:54-07 - - $
d13 1
d20 2
a21 3
   std::cout << "Hello, std::world!" << std::endl;
   std::cout << "My name is " << argv[0] << std::endl;
   std::cerr << argc << std::endl;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: hellostd.cpp,v 1.1 2015-03-31 17:43:41-07 - - $
d25 1
d32 1
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: hellostd.cpp,v 1.8 2014-03-27 18:59:06-07 - - $
d19 3
a21 3
   cout << "Hello, std::world!" << endl;
   cout << "My name is " << argv[0] << endl;
   cerr << argc << endl;
d27 2
a28 1
//TEST// catnv hellostd.cpp.log hellostd.out hellostd.err hellostd.exit >hellostd.lis
@
