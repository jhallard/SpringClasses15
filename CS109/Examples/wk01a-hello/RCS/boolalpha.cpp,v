head	1.4;
access;
symbols;
locks;
comment	@// @;


1.4
date	2014.03.28.02.03.31;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.03.28.02.01.53;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.01.04.03.11.35;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.01.05.04.48.16;	author -;	state -;
branches;
next	;


desc
@@


1.4
log
@-
@
text
@// $Id: boolalpha.cpp,v 1.3 2014-03-27 19:01:53-07 - - $

// Printing booleans as alpha.

#include <cstdlib>
#include <iostream>

using namespace std;

void true_false () {
   cout << "true = " << true << ", false = " << false << endl;
}

int main (int argc, char **argv) {
   (void) argc; // SUPPRESS: warning: unused parameter 'argc'
   (void) argv; // SUPPRESS: warning: unused parameter 'argv'

   true_false ();
   cout << boolalpha;
   true_false ();
   return EXIT_SUCCESS;
}

//TEST// ./boolalpha 1>boolalpha.out 2>&1
//TEST// catnv boolalpha.cpp.log boolalpha.out >boolalpha.lis
//TEST// rm -v boolalpha.cpp.log boolalpha.out
//TEST// mkpspdf boolalpha.ps boolalpha.cpp* boolalpha.lis

@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: boolalpha.cpp,v 1.2 2013-01-03 19:11:35-08 - - $
d25 2
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: boolalpha.cpp,v 1.1 2011-01-04 20:48:16-08 - - $
d24 1
a24 1
//TEST// runprogram.perl -x boolalpha.lis ./boolalpha
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: boolalpha.cc,v 1.10 2010-12-20 18:31:55-08 - - $
d25 1
a25 1
//TEST// mkpspdf boolalpha.ps boolalpha.cpp boolalpha.lis
@
