head	1.5;
access;
symbols;
locks;
comment	@// @;


1.5
date	2014.03.27.00.51.31;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.03.27.00.49.49;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.03.27.00.49.36;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.03.27.00.48.48;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.03.27.00.48.11;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: initializer.cpp,v 1.4 2014-03-26 17:49:49-07 - - $

//
// Illustrate initializer lists and for loops.
//

#include <iostream>
#include <map>
#include <string>
#include <vector>

using namespace std;

int main (int argc, char **argv) {
   vector<string> args (&argv[0], &argv[argc]);
   for (const auto& i: args) cout << i << endl;;
   map<string,double> msd = {{"foo",26}, {"bar",99}, {"baz",-3}};
   for (const auto& i: msd) cout << i.first << " " << i.second << endl;
   return EXIT_SUCCESS;
}

//TEST// ./initializer hello world >initializer.lis 2>&1
//TEST// mkpspdf initializer.ps initializer.cpp* initializer.lis

@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: initializer.cpp,v 1.3 2014-03-26 17:49:36-07 - - $
d21 4
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: initializer.cpp,v 1.2 2014-03-26 17:48:48-07 - - $
d17 1
a17 1
   map<string,double> msd = {{"foo"},26}, {"bar",99}, {"baz",-3}};
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: initializer.cpp,v 1.1 2014-03-26 17:48:11-07 - - $
d15 1
a15 1
   vector<string> args (argv);
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d9 1
d12 2
@
