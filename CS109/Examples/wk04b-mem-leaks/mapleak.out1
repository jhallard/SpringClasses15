==7338== Memcheck, a memory error detector
==7338== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==7338== Using Valgrind-3.9.0 and LibVEX; rerun with -h for copyright info
==7338== Command: mapleak arguments to check on leak
==7338== 
arguments => (1, arguments)
check => (3, check)
leak => (5, leak)
on => (4, on)
to => (2, to)
==7338== 
==7338== HEAP SUMMARY:
==7338==     in use at exit: 227 bytes in 10 blocks
==7338==   total heap usage: 16 allocs, 6 frees, 476 bytes allocated
==7338== 
==7338== 147 bytes in 5 blocks are indirectly lost in loss record 1 of 2
==7338==    at 0x4A076A5: operator new(unsigned long) (in /opt/rh/devtoolset-2/root/usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==7338==    by 0x3CC7C9C3C8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib64/libstdc++.so.6.0.13)
==7338==    by 0x3CC7C9CDE4: ??? (in /usr/lib64/libstdc++.so.6.0.13)
==7338==    by 0x3CC7C9CF32: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (in /usr/lib64/libstdc++.so.6.0.13)
==7338==    by 0x4043BE: main (mapleak.cpp:28)
==7338== 
==7338== 227 (80 direct, 147 indirect) bytes in 5 blocks are definitely lost in loss record 2 of 2
==7338==    at 0x4A076A5: operator new(unsigned long) (in /opt/rh/devtoolset-2/root/usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==7338==    by 0x4043D4: main (mapleak.cpp:29)
==7338== 
==7338== LEAK SUMMARY:
==7338==    definitely lost: 80 bytes in 5 blocks
==7338==    indirectly lost: 147 bytes in 5 blocks
==7338==      possibly lost: 0 bytes in 0 blocks
==7338==    still reachable: 0 bytes in 0 blocks
==7338==         suppressed: 0 bytes in 0 blocks
==7338== 
==7338== For counts of detected and suppressed errors, rerun with: -v
==7338== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
