==4041== Memcheck, a memory error detector
==4041== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4041== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4041== Command: vectorleak these are some arguments to check on leak
==4041== 
0: 0x4c2b040->these
1: 0x4c2b140->are
2: 0x4c2b240->some
3: 0x4c2b350->arguments
4: 0x4c2b410->to
5: 0x4c2b540->check
6: 0x4c2b5f0->on
7: 0x4c2b6a0->leak
==4041== 
==4041== HEAP SUMMARY:
==4041==     in use at exit: 298 bytes in 16 blocks
==4041==   total heap usage: 20 allocs, 4 frees, 418 bytes allocated
==4041== 
==4041== 234 bytes in 8 blocks are indirectly lost in loss record 1 of 2
==4041==    at 0x4A075FC: operator new(unsigned long) (in /opt/rh/devtoolset-2/root/usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==4041==    by 0x35DD09C3C8: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib64/libstdc++.so.6.0.13)
==4041==    by 0x35DD09CDE4: ??? (in /usr/lib64/libstdc++.so.6.0.13)
==4041==    by 0x35DD09CF32: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (in /usr/lib64/libstdc++.so.6.0.13)
==4041==    by 0x400DB8: main (vectorleak.cpp:17)
==4041== 
==4041== 298 (64 direct, 234 indirect) bytes in 8 blocks are definitely lost in loss record 2 of 2
==4041==    at 0x4A075FC: operator new(unsigned long) (in /opt/rh/devtoolset-2/root/usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==4041==    by 0x400D90: main (vectorleak.cpp:17)
==4041== 
==4041== LEAK SUMMARY:
==4041==    definitely lost: 64 bytes in 8 blocks
==4041==    indirectly lost: 234 bytes in 8 blocks
==4041==      possibly lost: 0 bytes in 0 blocks
==4041==    still reachable: 0 bytes in 0 blocks
==4041==         suppressed: 0 bytes in 0 blocks
==4041== 
==4041== For counts of detected and suppressed errors, rerun with: -v
==4041== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
