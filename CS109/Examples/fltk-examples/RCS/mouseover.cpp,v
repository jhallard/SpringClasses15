head	1.5;
access;
symbols;
locks;
comment	@// @;


1.5
date	2014.04.18.23.05.03;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.04.18.22.57.01;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.04.18.22.43.32;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.04.18.22.32.24;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.04.18.22.28.17;	author -;	state -;
branches;
next	;


desc
@@


1.5
log
@-
@
text
@// $Id: mouseover.cpp,v 1.4 2014-04-18 15:57:01-07 - - $

#include <FL/Fl.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Window.H>
#include <iostream>
#include <libgen.h>
using namespace std;

string execname;

class event: public Fl_Box {
   private:
      Fl_Window& win;
      int keystroke (int e, int key);
   public:
      event (int xpos, int ypos, int width, int height, Fl_Window&);
      int handle (int e);
};

int event::keystroke (int, int key) {
   string labeltext = execname + " [" + (char)key + "]";
   cout << __func__ << ": " << labeltext << endl;
   win.label (labeltext.c_str());
   return 1;
}

event::event (int xpos, int ypos, int width, int height,
              Fl_Window& win):
              Fl_Box (FL_UP_BOX, xpos, ypos, width, height, ""),
              win (win) {
   labelfont (FL_BOLD);
   labelsize (24);
   labeltype (FL_SHADOW_LABEL);
   label ("Mouse Over");
   Fl::focus (this);
}

int event::handle (int e) {
   int result = 1;
   switch (e) {
      case FL_ENTER:
         color (FL_RED);
         labelcolor (FL_BLACK);
         damage (1);
         break;
      case FL_LEAVE:
         color (FL_GREEN);
         labelcolor (FL_GRAY);
         damage (1);
         break;
      case FL_KEYDOWN:
         result = keystroke (e, Fl::event_key());
         break;
      default:
         result = Fl_Box::handle (e);
   }
   return 1;
}

int main (int argc, char **argv) {
   (void) argc; // warning: unused parameter 'argc'
   execname = basename (argv[0]);
   Fl_Window window (300, 200, execname.c_str());
   window.color (FL_BLUE);
   event ewin (20, 20, 260, 160, window);
   ewin.show();
   window.end();
   window.show();
   return Fl::run();
}
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: mouseover.cpp,v 1.2 2014-04-18 15:32:24-07 - - $
d23 3
a25 3
   char labeltext[256];
   sprintf (labeltext, "%s [%c]", execname.c_str(), key);
   win.label (labeltext);
d41 1
d47 1
a47 1
         return 1;
d52 1
a52 1
         return 1;
d54 2
a55 1
         return keystroke (e, Fl::event_key());
d57 1
a57 1
         return Fl_Box::handle (e);
@


1.3
log
@-
@
text
@d22 1
a22 1
int keystroke (int, int key) {
d25 1
a25 1
   win->label (labeltext);
d31 2
a32 1
              Fl_Box (FL_UP_BOX, xpos, ypos, width, height), win(win) {
d55 1
a55 1
         return FL_Box::handle (e);
d61 1
d64 2
a65 2
   win->color (FL_BLUE);
   event ewin (20, 20, 260, 160, win);
d67 2
a68 2
   win->end();
   win->show();
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: mouseover.cpp,v 1.1 2014-04-18 15:28:17-07 - - $
d4 1
d15 1
d18 1
a18 1
      event (int xpos, int ypos, int width, int height);
d22 1
a22 1
int keystroke (int e, int key) {
d29 3
a31 1
event::event (int xpos, int ypos, int width, int height) {
d48 1
a48 1
         labelcolor (FL_GREY);
d56 1
d61 1
a61 1
   Fl_Window window (300, 200, execname);
d63 5
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d35 18
a52 1

@
