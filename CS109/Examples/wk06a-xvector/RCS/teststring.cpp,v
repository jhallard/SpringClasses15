head	1.7;
access;
symbols;
locks;
comment	@// @;


1.7
date	2013.08.13.21.53.57;	author -;	state -;
branches;
next	1.6;

1.6
date	2013.08.13.01.55.17;	author -;	state -;
branches;
next	1.5;

1.5
date	2013.08.09.18.44.37;	author -;	state -;
branches;
next	1.4;

1.4
date	2013.08.08.19.03.25;	author -;	state -;
branches;
next	1.3;

1.3
date	2013.08.07.01.31.50;	author -;	state -;
branches;
next	1.2;

1.2
date	2013.08.07.01.20.49;	author -;	state -;
branches;
next	1.1;

1.1
date	2013.08.06.23.49.37;	author -;	state -;
branches;
next	;


desc
@@


1.7
log
@-
@
text
@// $Id: teststring.cpp,v 1.6 2013-08-12 18:55:17-07 - - $

#include <iostream>
#include <sstream>
#include <string>

using namespace std;

#include "xvector.h"

template <typename Iter>
void print (Iter itor, Iter end) {
   for (; itor != end; ++itor) cout << " " << *itor;
}

int main() {
   xvector<string> vs {"hello", "world", "foo", "bar", "baz"};
   xvector<string> vt = vs;
   vs.resize (9, "six");

   while (not vs.empty()) {
      cout << "vs.size = " << vs.size() << ", vs.back() = \""
           << vs.back() << "\"" << endl; 
      vs.pop_back();
   }

   cout << "second string vt:";
   for (auto i = vt.cbegin(); i != vt.cend(); ++i) {
      cout << " " << *i;
   }
   cout << endl;

   cout << "template print:";
   print (vt.begin(), vt.end());
   xvector<string>::iterator j {vt.begin()};
   xvector<string>::const_iterator cj {j};
   ++cj;
   cout << " " << *cj << endl;
   cout << "END" << endl;

   return 0;
}

@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: teststring.cpp,v 1.5 2013-08-09 11:44:37-07 - - $
d17 1
a17 1
   xvector<string> vs {"hello", "world", "foo", "bar"};
d19 1
a19 1
   vs.resize (7, "six");
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: teststring.cpp,v 1.4 2013-08-08 12:03:25-07 - - $
d35 2
a36 2
   xvector<string>::iterator j = vt.begin();
   xvector<string>::const_iterator cj = j;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: teststring.cpp,v 1.3 2013-08-06 18:31:50-07 - - $
d21 1
a21 1
   while (! vs.empty()) {
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: teststring.cpp,v 1.2 2013-08-06 18:20:49-07 - - $
a20 1
   cout << "vs.size: " << vs.size() << endl;
d22 2
a23 1
      cout << "teststring: " << vs.back();
a25 1
   cout << endl;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: teststring.cpp,v 1.1 2013-08-06 16:49:37-07 - - $
d19 1
d23 1
a23 1
      cout << "teststring: " << vs.back() << endl;
d26 1
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id: vectorex_test.cpp,v 1.17 2013-08-06 13:24:31-07 - - $
d9 1
a9 1
#include "vectorex.h"
d17 2
a18 2
   vectorex<string> vs {"hello", "world", "foo", "bar"};
   vectorex<string> vt = vs;
d34 2
a35 2
   vectorex<string>::iterator j = vt.begin();
   vectorex<string>::const_iterator cj = j;
@
