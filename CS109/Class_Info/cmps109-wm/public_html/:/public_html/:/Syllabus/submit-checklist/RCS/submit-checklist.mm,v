head	1.14;
access;
symbols;
locks;
comment	@.\" @;


1.14
date	2015.01.08.23.47.55;	author -;	state -;
branches;
next	1.13;

1.13
date	2014.01.04.01.12.13;	author -;	state -;
branches;
next	1.12;

1.12
date	2013.03.30.00.28.41;	author -;	state -;
branches;
next	1.11;

1.11
date	2013.03.30.00.27.08;	author -;	state -;
branches;
next	1.10;

1.10
date	2013.03.29.02.32.00;	author -;	state -;
branches;
next	1.9;

1.9
date	2012.09.26.00.52.17;	author -;	state -;
branches;
next	1.8;

1.8
date	2012.09.26.00.43.32;	author -;	state -;
branches;
next	1.7;

1.7
date	2012.09.26.00.42.59;	author -;	state -;
branches;
next	1.6;

1.6
date	2012.09.26.00.40.22;	author -;	state -;
branches;
next	1.5;

1.5
date	2011.08.22.21.19.13;	author -;	state -;
branches;
next	1.4;

1.4
date	2011.08.19.02.19.19;	author -;	state -;
branches;
next	1.3;

1.3
date	2011.08.19.02.14.41;	author -;	state -;
branches;
next	1.2;

1.2
date	2011.08.19.02.14.24;	author -;	state -;
branches;
next	1.1;

1.1
date	2011.08.19.02.14.10;	author -;	state -;
branches;
next	;


desc
@@


1.14
log
@-
@
text
@.so Tmac.mm-etc
.if t .Newcentury-fonts
.INITR* \n[.F]
.SIZE 12 14
.TITLE "Checklist for Submitting Programs"
.RCS "$Id: submit-checklist.mm,v 1.13 2014-01-03 17:12:13-08 - - $"
.PWD
.URL
.ds COURSE cmps012b
.ds INITIALS wm
.ds QUARTER w15
.ds ASGT asg1
Computer Science is an engineering discipline and is very exacting.
Do your work carefully and verify each step.
Generally, 1/2 of the points are for submitted source,
and the other 1/2 of the points for the results of testing.
Even one wrong character in a source file or
.V= Makefile
can cause disaster.
The following applies to all projects and labs.
.H 1 "Before you begin."
.ALX a ()
.LI
Print out all files provided in the assignment directory.
This will include the assignment specifications and listings
of source code provided.
.LI
Start early and study the specifications and code provided
early, during the first few days of the assignment cycle.
.LI
Check the due date in the
.V= README
at the root of the course directory.
Excuses like\(::
``I was under the impression that \|.\|.\|.''
or
``I though that \|.\|.\|.''
in connection with the due date are just silly.
Check on the due date to be sure.
You are responsible for proper calendar management.
.LI
.ds SUBMITDIR \*[COURSE]-\*[INITIALS].\*[QUARTER]
The submit command will always be of the form\(::
.VICODE* 1 "submit \*[SUBMITDIR] \*[ASGT] " filename\|.\|.\|.
Assignments used in previous quarters might not have been updated,
or possibly a
.V= Makefile
will have a submit directive from a previous quarter.
Make sure the course code (e.g.,
.V= \*[COURSE] ),
the instructor's initials (e.g.,
.V= \*[INITIALS] ),
and the quarter (e.g.,
.V= \*[QUARTER] ),
and the assignment name (e.g.,
.V= \*[ASGT] )
are all correct.
.LI
If you are not sure which submits are open, type the command\(::
.VICODE* 1 "submit \*[SUBMITDIR]"
and you will see an error message listing the available submits.
Obviously, if you are taking a different course,
substitute the appropriate code for that course.
.LE
.H 1 "As you are working."
.ALX a ()
.LI
Always build your software using
.V= gmake
with a working
.V= Makefile .
Do not type in the command
.V= javac 
or
.V= gcc
at the terminal.
.LI
Every time you edit a file, check it into 
.V= RCS
or other archival system.
This should happen automatically via the
.V= Makefile 
with
.V= "gmake ci" .
.LI
Run
.V= checksource
on all source files every time you edit them.
This should happen automatically via the
.V= Makefile 
with
.V= "gmake ci" .
.LI
Every time you edit some files,
run a test suite against the jar or executable.
.LI
Submit early.
Submit frequently.
.LI
.de Verify
.   RB "Verify\(!!"
.   BR "Verify\(!!"
.   E= "Verify\(!!"
.   RB "Check it again\(!!"
.   BR "Check it again\(!!"
.   E= "Check it again\(!!"
..
.Verify
.LE
.H 1 "When you are finished."
.ALX a ()
.LI
Is the directory
.V= /afs/cats.ucsc.edu/courses/cmps012b-wm/bin/
in your
.V= \[Do]PATH
variable, so that you can use the scripts in that directory\(??
.LI
If you are doing pair programming,
and you run the script
.V= partnercheck
in the directory containing your
.V= PARTNER
file,
does it report information about the user named therein\(??
.LI
Did you run
.V= checksource
on all of the files you are about to submit,
without complaint\(??
.LI
Did you put a
.V= submit
target in your
.V= Makefile ,
and does
.V= "gmake submit"
successfully submit all necessary files\(??
.LI
Did you type the command
.V= gmake
just before submitting to verify that the
.V= Makefile
and all of your source code is compilable\(??
If the grader runs
.V= gmake
and the build fails,
you lose 1/2 of the points for the program,
even for a trivial error.
.LI
Did you copy the files from the
.V= \&.score
directory and check on the insertuctions to the graders\(??
.LI
Did the test scripts from that directory work successfully\(??
.LI
.Verify
.LE
.H 1 "After you submit."
.ALX a ()
.LI
The graders will only look at is what you submit before the due date.
.LI
Did you verify the names of the files in the actual submit
directory\(??
.LI
Submit is a program that copies files into the submit hierarchy.
For example, if you type
.VICODE* 1 "submit \*[SUBMITDIR] \*[ASGT] " filename\|.\|.\|.
then your code will be present in the directory
.VCODE* 1 "/afs/cats.ucsc.edu/class/\*[SUBMITDIR]/\*[ASGT]/\[Do]USER
where
.V= \[Do]USER
is your username.
The class volume and assignment name will vary from course to course
and from quarter to quarter,
but always follows the same pattern.
.LI
Use
.V= ls
to verify what you have submitted.
Make sure you understand how to use
.V= submit
well in advance of the due date.
Example command\(::
.VCODE* 1 \
"ls -la /afs/cats.ucsc.edu/class/\*[SUBMITDIR]/\*[ASGT]/\[Do]USER
.LI
In the submit directory itself, 
the names of the files you submit are prefixed by a sequence number.
When submit is locked, only the latest will be kept for the graders.
For example, if you submit
.V= README
three times, you will see
.V= 1_README ,
.V= 2_README ,
and
.V= 3_README .
The file
.V= 3_README
is what the graders will see as
.V= README .
.LE
.FINISH
@


1.13
log
@-
@
text
@d6 1
a6 1
.RCS "$Id: submit-checklist.mm,v 1.12 2013-03-29 17:28:41-07 - - $"
d11 1
a11 1
.ds QUARTER s13
@


1.12
log
@-
@
text
@d4 1
d6 1
a6 1
.RCS "$Id: submit-checklist.mm,v 1.11 2013-03-29 17:27:08-07 - - $"
@


1.11
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: submit-checklist.mm,v 1.10 2013-03-28 19:32:00-07 - - $"
d184 3
@


1.10
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: submit-checklist.mm,v 1.9 2012-09-25 17:52:17-07 - - $"
d8 4
a40 4
.ds COURSE cmps012b
.ds INITIALS wm
.ds QUARTER f12
.ds ASGT asg1
@


1.9
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: submit-checklist.mm,v 1.8 2012-09-25 17:43:32-07 - - $"
d74 1
a74 1
.V= cc
@


1.8
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: submit-checklist.mm,v 1.7 2012-09-25 17:42:59-07 - - $"
d7 1
@


1.7
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: submit-checklist.mm,v 1.6 2012-09-25 17:40:22-07 - - $"
d60 2
@


1.6
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: submit-checklist.mm,v 1.5 2011-08-22 14:19:13-07 - - $"
d56 4
@


1.5
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: submit-checklist.mm,v 1.4 2011-08-18 19:19:19-07 - - $"
d38 1
a38 1
.ds QUARTER f11
@


1.4
log
@-
@
text
@d4 2
a5 2
.TITLE "Checklist for Project and Submitting Programs"
.RCS "$Id: submit-checklist.mm,v 1.3 2011-08-18 19:14:41-07 - - $"
@


1.3
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: submit-checklist.mm,v 1.2 2011-08-18 19:14:24-07 - - $"
d36 5
d42 1
a42 1
.VICODE* 1 "submit cmps012b-wm.f11 asg1 " filename\|.\|.\|.
d48 1
a48 1
.V= cmps012b ),
d50 1
a50 1
.V= wm ),
d52 1
a52 1
.V= f11 ),
d54 1
a54 1
.V= asg1 )
d161 1
a161 1
.VICODE* 1 "submit cmps012b-wm.w11 asg1 " filename\|.\|.\|.
d163 1
a163 1
.VCODE* 1 "/afs/cats.ucsc.edu/class/cmps012b-wm.w11/asg1/\[Do]USER
@


1.2
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: submit-checklist.mm,v 1.1 2011-08-18 19:14:10-07 - - $"
d47 1
a47 1
.V= s11 ),
@


1.1
log
@-
@
text
@d5 1
a5 1
.RCS "$Id: submit-checklist.mm,v 1.3 2011-03-23 18:50:57-07 - - $"
d37 1
a37 1
.VICODE* 1 "submit cmps012b-wm.s11 asg1 " filename\|.\|.\|.
@
